{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Kirill Serchenko\\\\Desktop\\\\game_time\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Kirill Serchenko\\\\Desktop\\\\game_time\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Kirill Serchenko\\\\Desktop\\\\game_time\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Kirill Serchenko\\\\Desktop\\\\game_time\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Kirill Serchenko\\\\Desktop\\\\game_time\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Kirill Serchenko\\\\Desktop\\\\game_time\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kirill Serchenko\\\\Desktop\\\\game_time\\\\src\\\\Components\\\\AddPlayer\\\\AddPlayer.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { PageHeader, FormGroup, Button, FormControl, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport StarRatingComponent from 'react-star-rating-component';\nimport './AddPlayer.css';\n\nvar AddPlayer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddPlayer, _Component);\n\n  function AddPlayer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddPlayer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddPlayer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: '',\n      //Input value\n      rating: 1,\n      //Players rating value\n      validationStatus: \"error\" //Validation status check if the field not empty\n\n      /*-----------------------Change value of input------------------------ */\n\n    };\n\n    _this.handleChange = function (e) {\n      return _this.setState({\n        value: e.target.value\n      });\n    };\n\n    _this.onStarClick = function (nextValue) {\n      return _this.setState({\n        rating: nextValue\n      });\n    };\n\n    _this.addClicked = function (value, rating) {\n      var temp = _this.props.mainstate.players;\n      temp.push({\n        value: value,\n        rating: rating\n      });\n\n      _this.props.setSt({\n        backdropVisibility: \"visible\",\n        textOfBackdrop: \"Successfully added new player!\",\n        players: _toConsumableArray(temp)\n      });\n\n      _this.props.history.push('/Menu'); //Pass to Home screen page    \n\n    };\n\n    return _this;\n  }\n\n  _createClass(AddPlayer, [{\n    key: \"render\",\n\n    /*-----------------------------------END------------------------------------------------*/\n\n    /*---------------------Render Function--------------------------------------------------*/\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          rating = _this$state.rating,\n          value = _this$state.value; //take rating and value property from current state\n\n      var validationStatus = this.state.value === \"\".slice(\" \") ? \"error\" : \"success\"; //check validation status of input if empty error else success\n\n      return React.createElement(\"div\", {\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(PageHeader, {\n        className: \"tracking-in-expand-fwd-top\",\n        style: {\n          fontFamily: \"'Alfa Slab One', cursive\",\n          color: \"green\",\n          textShadow: \"2px 2px lightgreen\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"AddPlayer\"), React.createElement(\"form\", {\n        id: \"myForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: validationStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        maxLength: 20,\n        value: value,\n        placeholder: \"Enter Player Name\",\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(StarRatingComponent, {\n        name: \"rate1\",\n        starCount: 5,\n        value: rating,\n        onStarClick: this.onStarClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.addClicked(_this2.state.value, _this2.state.rating);\n        },\n        className: this.state.value === \"\".slice(\" \") ? null : \"jello-diagonal-2\",\n        bsStyle: \"primary\",\n        type: \"submit\",\n        disabled: this.state.value === \"\".slice(\" \") ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"fas fa-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"\\xA0 Add\")));\n    }\n    /*------------------------------------------------END Render--------------------------------------*/\n\n  }]);\n\n  return AddPlayer;\n}(Component);\n\nexport default withRouter(AddPlayer); //withRouter HOC component for get history object.","map":{"version":3,"sources":["C:\\Users\\Kirill Serchenko\\Desktop\\game_time\\src\\Components\\AddPlayer\\AddPlayer.js"],"names":["React","Component","withRouter","PageHeader","FormGroup","Button","FormControl","ListGroup","ListGroupItem","StarRatingComponent","AddPlayer","state","value","rating","validationStatus","handleChange","e","setState","target","onStarClick","nextValue","addClicked","temp","props","mainstate","players","push","setSt","backdropVisibility","textOfBackdrop","history","slice","fontFamily","color","textShadow","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {PageHeader,FormGroup,Button,FormControl,ListGroup,ListGroupItem} from 'react-bootstrap'\r\nimport StarRatingComponent from 'react-star-rating-component';\r\nimport './AddPlayer.css'\r\n\r\n\r\nclass AddPlayer extends Component {\r\n    \r\n  state = {\r\n        value: '',//Input value\r\n        rating:1,//Players rating value\r\n        validationStatus:\"error\",//Validation status check if the field not empty\r\n      }\r\n    \r\n  /*-----------------------Change value of input------------------------ */\r\n  handleChange=(e)=>this.setState({ value: e.target.value});\r\n  /*------------------------END-----------------------------------------*/\r\n\r\n  /*-----------------------Change value of stars rating----------------*/\r\n  onStarClick=(nextValue)=>this.setState({rating: nextValue});\r\n  /*-----------------------END----------------*/\r\n        \r\n  /*------------------------Add New Player when the user clicked on add button-----------*/\r\n  addClicked=(value,rating)=>\r\n  {\r\n    let temp=this.props.mainstate.players\r\n    temp.push({value,rating})\r\n    this.props.setSt({ backdropVisibility:\"visible\",textOfBackdrop:\"Successfully added new player!\",players:[...temp]})\r\n    this.props.history.push('/Menu')//Pass to Home screen page    \r\n  }  \r\n  /*-----------------------------------END------------------------------------------------*/\r\n   \r\n \r\n  /*---------------------Render Function--------------------------------------------------*/\r\n  render() {\r\n        const { rating,value } = this.state; //take rating and value property from current state\r\n        const validationStatus=this.state.value ===\"\".slice(\" \")?\"error\":\"success\";//check validation status of input if empty error else success\r\n    \r\n      return (\r\n        <div id=\"container\">\r\n\r\n{/*----------------------Header of Component----------------------------------------------------- */}\r\n        <PageHeader \r\n        className=\"tracking-in-expand-fwd-top\" \r\n        style={{fontFamily: \"'Alfa Slab One', cursive\",color:\"green\",textShadow:\"2px 2px lightgreen\"}}>\r\n        AddPlayer\r\n        </PageHeader>\r\n{/*----------------------END Header----------------------------------------------------- */}\r\n\r\n\r\n\r\n\r\n{/*----------------------Form----------------------------------------------------- */}\r\n        <form id=\"myForm\">\r\n          <FormGroup  controlId=\"formBasicText\" validationState={validationStatus}>{/*validation state according validation status*/}\r\n          <FormControl \r\n          type=\"text\" \r\n          maxLength={20} \r\n          value={value} \r\n          placeholder=\"Enter Player Name\" \r\n          onChange={(e)=>this.handleChange(e)}/>\r\n          <FormControl.Feedback />    \r\n          \r\n          <StarRatingComponent \r\n          name=\"rate1\" \r\n          starCount={5}\r\n          value={rating}\r\n          onStarClick={this.onStarClick.bind(this)} />\r\n          </FormGroup>\r\n        </form>\r\n{/*---------------------END Form----------------------------------------------------------*/}\r\n\r\n        {/*----------------------------Add Button----------------------------------------------- */}\r\n        <Button\r\n          onClick={()=>this.addClicked(this.state.value,this.state.rating)} \r\n          className={this.state.value ===\"\".slice(\" \")?null :\"jello-diagonal-2\"} \r\n          bsStyle=\"primary\" type='submit' disabled={this.state.value ===\"\".slice(\" \")?true:false}>\r\n          <i class=\"fas fa-plus\">&nbsp; Add</i>\r\n        </Button>\r\n        {/*-----END Button------------------------------------------------------------------------*/}\r\n        \r\n        </div>\r\n    )\r\n  }\r\n/*------------------------------------------------END Render--------------------------------------*/ \r\n}\r\n\r\nexport default withRouter(AddPlayer);//withRouter HOC component for get history object. \r\n"]},"metadata":{},"sourceType":"module"}