{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\kiril\\\\Desktop\\\\game_time\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\kiril\\\\Desktop\\\\game_time\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kiril\\\\Desktop\\\\game_time\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kiril\\\\Desktop\\\\game_time\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kiril\\\\Desktop\\\\game_time\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kiril\\\\Desktop\\\\game_time\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kiril\\\\Desktop\\\\game_time\\\\src\\\\Components\\\\EditPlayer\\\\EditPlayer.js\";\nimport React, { Component } from 'react';\nimport { PageHeader, FormGroup, FormControl, Button } from 'react-bootstrap';\nimport { withRouter } from \"react-router-dom\";\nimport './EditPlayer.css';\n\nvar EditPlayer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditPlayer, _Component);\n\n  function EditPlayer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditPlayer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditPlayer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      validationStatus: \"error\",\n      //validation status sets only in first input\n      value1: \"\",\n      //value of first input\n      value2: \"\",\n      //value of second input\n      value3: 1,\n      //value of rating input\n      visibility1: \"hidden\",\n      //visibility of next form \n      visibility2: \"hidden\" //visibility of change button \n      //Change value,validation of first input \n\n    };\n\n    _this.handleChange1 = function (e) {\n      //--------------------------Some conditions to check exist player,visibility.--------\n      var checkMatchPlayer = _this.props.mainstate.players.find(function (player) {\n        return player.value === e.target.value.split(\" \").join(\"\");\n      }); //check if entered value empty\n\n\n      var validStatus = checkMatchPlayer === undefined ? \"error\" : \"success\";\n      var checkVisibility = checkMatchPlayer === undefined ? \"hidden\" : \"visible\"; //visibility of next form  \n      //---------------------------END------------------------------------\n      //-------------update Current state-------------------------------------------\n\n      _this.setState({\n        validationStatus: validStatus,\n        value1: e.target.value,\n        visibility1: checkVisibility\n      });\n    };\n\n    _this.handleChange2 = function (e) {\n      return _this.setState({\n        value2: e.target.value\n      });\n    };\n\n    _this.changePlayer = function () {\n      var objIndex = _this.props.mainstate.players.findIndex(function (player) {\n        return player.value === _this.state.value1;\n      });\n\n      var tempPlayers = _toConsumableArray(_this.props.mainstate.players); //Update object's name property.\n\n\n      tempPlayers[objIndex] = {\n        value: _this.state.value2,\n        rating: _this.state.value3\n      };\n\n      _this.props.setSt({\n        backdropVisibility: \"visible\",\n        textOfBackdrop: \"Successfully edited player!\",\n        players: _toConsumableArray(tempPlayers)\n      });\n\n      _this.props.history.push('/Menu'); //Pass to home screen \n\n    };\n\n    _this.numChange = function (e) {\n      return _this.setState({\n        value3: e.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EditPlayer, [{\n    key: \"render\",\n    //------------------------------------------------------------------------\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(PageHeader, {\n        className: \"tracking-in-expand-fwd-top\",\n        style: {\n          fontFamily: \"'Alfa Slab One', cursive\",\n          color: \"green\",\n          textShadow: \"2px 2px lightgreen\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Edit Player\"), React.createElement(\"form\", {\n        id: \"myForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: this.state.validationStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        maxLength: 20,\n        value: this.state.value1 //value of first input \n        ,\n        placeholder: \"Enter Player Name\",\n        onChange: this.handleChange1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }))), React.createElement(\"form\", {\n        id: \"myForm\",\n        style: {\n          visibility: this.state.visibility1\n        },\n        className: this.state.visibility1 === \"visible\" ? \"scale-in-ver-center\" : \"slide-out-bck-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        maxLength: 20,\n        value: this.state.value2,\n        placeholder: \"Enter New Name\",\n        onChange: this.handleChange2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        style: {\n          margin: \"10px\",\n          width: \"20%\"\n        },\n        onChange: this.numChange,\n        value: this.state.value3,\n        type: \"number\",\n        name: \"quantity\",\n        min: \"1\",\n        max: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        bsStyle: \"warning\",\n        onClick: this.changePlayer,\n        style: {\n          visibility: this.state.value2 !== \"\" ? \"visible\" : \"hidden\"\n        } //Appears when second input not empty\n        ,\n        className: this.state.value2 !== \"\" ? \"slide-in-elliptic-top-fwd\" : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Change\"));\n    }\n  }]);\n\n  return EditPlayer;\n}(Component);\n\nexport default withRouter(EditPlayer); //HOC Component for get history object","map":{"version":3,"sources":["C:\\Users\\kiril\\Desktop\\game_time\\src\\Components\\EditPlayer\\EditPlayer.js"],"names":["React","Component","PageHeader","FormGroup","FormControl","Button","withRouter","EditPlayer","state","validationStatus","value1","value2","value3","visibility1","visibility2","handleChange1","e","checkMatchPlayer","props","mainstate","players","find","player","value","target","split","join","validStatus","undefined","checkVisibility","setState","handleChange2","changePlayer","objIndex","findIndex","tempPlayers","rating","setSt","backdropVisibility","textOfBackdrop","history","push","numChange","fontFamily","color","textShadow","visibility","margin","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {PageHeader,FormGroup,FormControl,Button} from 'react-bootstrap'\r\nimport { withRouter } from \"react-router-dom\"\r\nimport './EditPlayer.css'\r\n\r\n\r\n\r\nclass EditPlayer extends Component {\r\n \r\n  state={\r\n    validationStatus:\"error\",  //validation status sets only in first input\r\n    value1:\"\",                 //value of first input\r\n    value2:\"\",                 //value of second input\r\n    value3:1,                  //value of rating input\r\n    visibility1:\"hidden\",      //visibility of next form \r\n    visibility2:\"hidden\"       //visibility of change button \r\n}\r\n\r\n//Change value,validation of first input \r\n handleChange1=(e)=>{\r\n  //--------------------------Some conditions to check exist player,visibility.--------\r\n  const  checkMatchPlayer=this.props.mainstate.players.find(player=>player.value===e.target.value.split(\" \").join(\"\"))//check if entered value empty\r\n  const  validStatus=checkMatchPlayer=== undefined ?\"error\":\"success\"\r\n  const  checkVisibility=checkMatchPlayer=== undefined ?\"hidden\":\"visible\"//visibility of next form  \r\n  //---------------------------END------------------------------------\r\n  \r\n  //-------------update Current state-------------------------------------------\r\n  this.setState({\r\n     validationStatus:validStatus,\r\n     value1:e.target.value,\r\n     visibility1:checkVisibility})\r\n}\r\n//----------------------------END------------------------------------\r\n\r\n//----------------Change value of second input-------------------------------------\r\nhandleChange2=(e)=>this.setState({value2:e.target.value})\r\n//-------------------------END------------------------------------------------\r\n\r\n//------------------------Change player logic----------------------------------\r\nchangePlayer=()=>{\r\nlet objIndex = this.props.mainstate\r\n.players.findIndex(player =>player.value === this.state.value1);\r\nlet tempPlayers=[...this.props.mainstate.players]\r\n//Update object's name property.\r\ntempPlayers[objIndex]={value:this.state.value2,rating:this.state.value3}\r\nthis.props.setSt({ backdropVisibility:\"visible\",textOfBackdrop:\"Successfully edited player!\",players:[... tempPlayers]})\r\nthis.props.history.push('/Menu');//Pass to home screen \r\n}\r\n//---------------------------------------------------------------------------------\r\n\r\n\r\n/*Change Rating of Player*/\r\nnumChange=(e)=>this.setState({value3:e.target.value})\r\n//------------------------------------------------------------------------\r\n \r\n  render() {\r\n    return (\r\n      <div id=\"container\">\r\n      {/*--------------------------Component Header-------------------------------------------*/}\r\n        <PageHeader className=\"tracking-in-expand-fwd-top\" style={{fontFamily: \"'Alfa Slab One', cursive\",color:\"green\",textShadow:\"2px 2px lightgreen\"}}>Edit Player</PageHeader> \r\n\r\n      {/*-----------------------------First Form for search player to edit----------------------------------------------------- */}  \r\n        <form id=\"myForm\">\r\n        <FormGroup\r\n        controlId=\"formBasicText\"\r\n        validationState={this.state.validationStatus}>{/*Validation status error*/ }\r\n\r\n        <FormControl\r\n        type=\"text\" \r\n        maxLength={20} \r\n        value={this.state.value1}//value of first input \r\n        placeholder=\"Enter Player Name\" \r\n        onChange={this.handleChange1}/>\r\n        <FormControl.Feedback />  \r\n        </FormGroup>\r\n        </form>\r\n        \r\n      {/*------------------------------Second Form Appears when player exist in db-------------------------------- */}\r\n        <form id=\"myForm\"\r\n        style={{ visibility:this.state.visibility1}} \r\n        className={this.state.visibility1===\"visible\"?\"scale-in-ver-center\":\"slide-out-bck-center\"}>{/*Change class name for animation according visibility1*/}\r\n        <FormGroup  \r\n        controlId=\"formBasicText\">\r\n        <FormControl \r\n        type=\"text\"\r\n         maxLength={20} \r\n         value={this.state.value2} \r\n         placeholder=\"Enter New Name\" \r\n         onChange={this.handleChange2}/>\r\n      \r\n      {/*-------------------------------------------Rating Change input with number type------------------------------------------ */}       \r\n        <input \r\n        style={{margin:\"10px\",width:\"20%\"}}\r\n        onChange={this.numChange}\r\n        value={this.state.value3} \r\n        type=\"number\"\r\n        name=\"quantity\"\r\n        min=\"1\" \r\n        max=\"5\"/>\r\n        <FormControl.Feedback />  \r\n        </FormGroup>\r\n        </form>\r\n      \r\n      {/*------------------------------------------------------Make changes Button------------------------------------------------------------- */}\r\n        <Button\r\n        bsStyle=\"warning\"\r\n        onClick={this.changePlayer}\r\n        style={{visibility:this.state.value2!==\"\"?\"visible\":\"hidden\"}}//Appears when second input not empty\r\n        className={this.state.value2!==\"\"?\"slide-in-elliptic-top-fwd\":null}>\r\n        Change\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(EditPlayer);//HOC Component for get history object"]},"metadata":{},"sourceType":"module"}