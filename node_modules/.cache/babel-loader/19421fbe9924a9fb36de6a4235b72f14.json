{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.DynamicSubmit = exports.DynamicSubmitRaw = exports.DynamicSubmitMode = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _withFormContext = require(\"../form/withFormContext\");\n\nvar _Submit = require(\"./../submit/Submit\");\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar classNames = require('classnames'); // Misc\n\n\nvar DynamicSubmitMode;\nexports.DynamicSubmitMode = DynamicSubmitMode;\n\n(function (DynamicSubmitMode) {\n  DynamicSubmitMode[DynamicSubmitMode[\"Normal\"] = 0] = \"Normal\";\n  DynamicSubmitMode[DynamicSubmitMode[\"Submitting\"] = 1] = \"Submitting\";\n  DynamicSubmitMode[DynamicSubmitMode[\"Error\"] = 2] = \"Error\";\n  DynamicSubmitMode[DynamicSubmitMode[\"Success\"] = 3] = \"Success\";\n})(DynamicSubmitMode || (exports.DynamicSubmitMode = DynamicSubmitMode = {}));\n\nvar DynamicSubmitRaw =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(DynamicSubmitRaw, _React$PureComponent);\n\n  function DynamicSubmitRaw(props) {\n    var _this;\n\n    _classCallCheck(this, DynamicSubmitRaw);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DynamicSubmitRaw).call(this, props));\n    _this.state = {\n      buttonState: DynamicSubmitMode.Normal\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitting = _this.submitting.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.error = _this.error.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.success = _this.success.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reset = _this.reset.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DynamicSubmitRaw, [{\n    key: \"render\",\n    value: function render() {\n      var buttonClassName = classNames(this.props.className, this.renderClassName());\n      return React.createElement(_Submit.SubmitRaw, _extends({}, this.props, {\n        className: buttonClassName,\n        onClick: this.handleClick\n      }), this.renderChildren());\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      e.preventDefault();\n      this.props.submitDisablesInputs && this.props.formContext.disableComponents();\n      this.props.onClick && this.props.onClick(e, this.submitting, this.error, this.success, this.reset);\n    }\n  }, {\n    key: \"submitting\",\n    value: function submitting() {\n      this.setState({\n        buttonState: DynamicSubmitMode.Submitting\n      });\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      this.setState({\n        buttonState: DynamicSubmitMode.Error\n      });\n    }\n  }, {\n    key: \"success\",\n    value: function success() {\n      this.setState({\n        buttonState: DynamicSubmitMode.Success\n      });\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.props.resetEnablesInputs && this.props.formContext.enableComponents();\n      this.setState({\n        buttonState: DynamicSubmitMode.Normal\n      });\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      switch (this.state.buttonState) {\n        case DynamicSubmitMode.Error:\n          return this.props.errorChildren ? this.props.errorChildren : this.props.children;\n\n        case DynamicSubmitMode.Submitting:\n          return this.props.submittingChildren ? this.props.submittingChildren : this.props.children;\n\n        case DynamicSubmitMode.Success:\n          return this.props.successChildren ? this.props.successChildren : this.props.children;\n\n        default:\n          return this.props.children;\n      }\n    }\n  }, {\n    key: \"renderClassName\",\n    value: function renderClassName() {\n      switch (this.state.buttonState) {\n        case DynamicSubmitMode.Error:\n          return this.props.errorClassName ? this.props.errorClassName : '';\n\n        case DynamicSubmitMode.Submitting:\n          return this.props.submittingClassName ? this.props.submittingClassName : '';\n\n        case DynamicSubmitMode.Success:\n          return this.props.successClassName ? this.props.successClassName : '';\n\n        default:\n          return this.props.normalClassName ? this.props.normalClassName : '';\n      }\n    }\n  }]);\n\n  return DynamicSubmitRaw;\n}(React.PureComponent);\n\nexports.DynamicSubmitRaw = DynamicSubmitRaw;\n\n_defineProperty(DynamicSubmitRaw, \"defaultProps\", Object.assign({}, {\n  validateForm: true,\n  submitDisablesInputs: true,\n  resetEnablesInputs: true\n}));\n\nvar DynamicSubmit = (0, _withFormContext.withFormContext)(DynamicSubmitRaw);\nexports.DynamicSubmit = DynamicSubmit;\nvar _default = DynamicSubmit;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}