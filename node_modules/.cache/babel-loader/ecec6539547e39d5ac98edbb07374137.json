{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Kirill Serchenko\\\\Desktop\\\\game_time\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Kirill Serchenko\\\\Desktop\\\\game_time\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Kirill Serchenko\\\\Desktop\\\\game_time\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Kirill Serchenko\\\\Desktop\\\\game_time\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Kirill Serchenko\\\\Desktop\\\\game_time\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kirill Serchenko\\\\Desktop\\\\game_time\\\\src\\\\Components\\\\EditPlayer\\\\EditPlayer.js\";\nimport React, { Component } from 'react';\nimport { PageHeader, FormGroup, FormControl, Button } from 'react-bootstrap';\n\nvar EditPlayer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditPlayer, _Component);\n\n  function EditPlayer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditPlayer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditPlayer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      validationStatus: \"error\",\n      allow: false,\n      value: \"\",\n      visibility: \"hidden\"\n    };\n\n    _this.handleChange = function (e) {\n      var check = null;\n      check = _this.props.mainstate.players.find(function (player) {\n        return player.value === e.target.value.split(\" \").join(\"\");\n      });\n      var x = check === undefined ? \"error\" : \"success\";\n\n      _this.setState({\n        validationStatus: x,\n        allow: x === \"success\" ? true : false,\n        value: e.target.value,\n        visibility: check === undefined ? \"hidden\" : \"visible\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EditPlayer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(PageHeader, {\n        className: \"tracking-in-expand-fwd-top\",\n        style: {\n          fontFamily: \"'Alfa Slab One', cursive\",\n          color: \"green\",\n          textShadow: \"2px 2px lightgreen\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Edit Player\"), React.createElement(\"form\", {\n        id: \"myForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: this.state.validationStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        maxLength: 20,\n        value: this.state.value,\n        placeholder: \"Enter Player Name\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }))), React.createElement(\"form\", {\n        id: \"myForm\",\n        style: {\n          visibility: this.state.visibility\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        maxLength: 20,\n        value: this.state.value,\n        placeholder: \"Enter New Name\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        style: {\n          margin: \"10px\"\n        },\n        type: \"number\",\n        name: \"quantity\",\n        min: \"1\",\n        max: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return EditPlayer;\n}(Component);\n\nexport { EditPlayer as default };","map":{"version":3,"sources":["C:\\Users\\Kirill Serchenko\\Desktop\\game_time\\src\\Components\\EditPlayer\\EditPlayer.js"],"names":["React","Component","PageHeader","FormGroup","FormControl","Button","EditPlayer","state","validationStatus","allow","value","visibility","handleChange","e","check","props","mainstate","players","find","player","target","split","join","x","undefined","setState","fontFamily","color","textShadow","margin"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,UAAR,EAAmBC,SAAnB,EAA6BC,WAA7B,EAAyCC,MAAzC,QAAsD,iBAAtD;;IAEqBC,U;;;;;;;;;;;;;;;;;UAEnBC,K,GAAM;AACJC,MAAAA,gBAAgB,EAAC,OADb;AAEJC,MAAAA,KAAK,EAAC,KAFF;AAGJC,MAAAA,KAAK,EAAC,EAHF;AAIJC,MAAAA,UAAU,EAAC;AAJP,K;;UAQPC,Y,GAAa,UAACC,CAAD,EAAK;AACjB,UAAIC,KAAK,GAAC,IAAV;AACAA,MAAAA,KAAK,GAAC,MAAKC,KAAL,CAAWC,SAAX,CAAqBC,OAArB,CAA6BC,IAA7B,CAAkC,UAAAC,MAAM;AAAA,eAAEA,MAAM,CAACT,KAAP,KAAeG,CAAC,CAACO,MAAF,CAASV,KAAT,CAAeW,KAAf,CAAqB,GAArB,EAA0BC,IAA1B,CAA+B,EAA/B,CAAjB;AAAA,OAAxC,CAAN;AACA,UAAIC,CAAC,GAACT,KAAK,KAAIU,SAAT,GAAoB,OAApB,GAA4B,SAAlC;;AACA,YAAKC,QAAL,CAAc;AAACjB,QAAAA,gBAAgB,EAACe,CAAlB;AAAoBd,QAAAA,KAAK,EAACc,CAAC,KAAG,SAAJ,GAAc,IAAd,GAAmB,KAA7C;AAAmDb,QAAAA,KAAK,EAACG,CAAC,CAACO,MAAF,CAASV,KAAlE;AAAwEC,QAAAA,UAAU,EAACG,KAAK,KAAIU,SAAT,GAAoB,QAApB,GAA6B;AAAhH,OAAd;AACD,K;;;;;;;6BAIU;AACP,aACE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,4BAAtB;AAAmD,QAAA,KAAK,EAAE;AAACE,UAAAA,UAAU,EAAE,0BAAb;AAAwCC,UAAAA,KAAK,EAAC,OAA9C;AAAsDC,UAAAA,UAAU,EAAC;AAAjE,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADH,EAEG;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD,oBAAC,SAAD;AAAY,QAAA,SAAS,EAAC,eAAtB;AAAsC,QAAA,eAAe,EAAE,KAAKrB,KAAL,CAAWC,gBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAC,MAAlB;AAAyB,QAAA,SAAS,EAAE,EAApC;AAAwC,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWG,KAA1D;AAAiE,QAAA,WAAW,EAAC,mBAA7E;AAAiG,QAAA,QAAQ,EAAE,KAAKE,YAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADC,CAFH,EAQE;AAAM,QAAA,EAAE,EAAC,QAAT;AAAkB,QAAA,KAAK,EAAE;AAAED,UAAAA,UAAU,EAAC,KAAKJ,KAAL,CAAWI;AAAxB,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AAAY,QAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAC,MAAlB;AAAyB,QAAA,SAAS,EAAE,EAApC;AAAwC,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG,KAA1D;AAAiE,QAAA,WAAW,EAAC,gBAA7E;AAA8F,QAAA,QAAQ,EAAE,KAAKE,YAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA;AAAO,QAAA,KAAK,EAAE;AAACiB,UAAAA,MAAM,EAAC;AAAR,SAAd;AAA+B,QAAA,IAAI,EAAC,QAApC;AAA6C,QAAA,IAAI,EAAC,UAAlD;AAA6D,QAAA,GAAG,EAAC,GAAjE;AAAqE,QAAA,GAAG,EAAC,GAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAGA,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA,CADA,CARF,CADF;AAkBD;;;;EAtCqC5B,S;;SAAnBK,U","sourcesContent":["import React, { Component } from 'react'\r\nimport {PageHeader,FormGroup,FormControl,Button} from 'react-bootstrap'\r\n\r\nexport default class EditPlayer extends Component {\r\n \r\n  state={\r\n    validationStatus:\"error\",\r\n    allow:false,\r\n    value:\"\",\r\n    visibility:\"hidden\"\r\n}\r\n\r\n\r\n handleChange=(e)=>{\r\n  let check=null;\r\n  check=this.props.mainstate.players.find(player=>player.value===e.target.value.split(\" \").join(\"\"))\r\n  let x=check=== undefined ?\"error\":\"success\"\r\n  this.setState({validationStatus:x,allow:x===\"success\"?true:false,value:e.target.value,visibility:check=== undefined ?\"hidden\":\"visible\"})\r\n}\r\n\r\n\r\n \r\n  render() {\r\n    return (\r\n      <div id=\"container\">\r\n         <PageHeader className=\"tracking-in-expand-fwd-top\" style={{fontFamily: \"'Alfa Slab One', cursive\",color:\"green\",textShadow:\"2px 2px lightgreen\"}}>Edit Player</PageHeader> \r\n         <form id=\"myForm\">\r\n        <FormGroup  controlId=\"formBasicText\" validationState={this.state.validationStatus}>\r\n        <FormControl type=\"text\" maxLength={20} value={this.state.value} placeholder=\"Enter Player Name\" onChange={this.handleChange}/>\r\n        <FormControl.Feedback />  \r\n        </FormGroup>\r\n        </form>\r\n        <form id=\"myForm\" style={{ visibility:this.state.visibility}}>\r\n        <FormGroup  controlId=\"formBasicText\">\r\n        <FormControl type=\"text\" maxLength={20} value={this.state.value} placeholder=\"Enter New Name\" onChange={this.handleChange}/>\r\n        <input style={{margin:\"10px\"}} type=\"number\" name=\"quantity\" min=\"1\" max=\"5\" />\r\n        <FormControl.Feedback />  \r\n        </FormGroup>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}