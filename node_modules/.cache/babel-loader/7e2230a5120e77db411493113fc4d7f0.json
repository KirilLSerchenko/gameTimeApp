{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.OpeningHoursWeek = exports.OpeningHoursWeekRaw = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _OpeningHoursUtil = _interopRequireDefault(require(\"../utils/OpeningHoursUtil\"));\n\nvar _OpeningHoursDay = require(\"../openingHoursDay/OpeningHoursDay\");\n\nvar _BaseInput2 = require(\"../../base/input/BaseInput\");\n\nvar _Checkbox = require(\"../../checkbox/Checkbox\");\n\nvar _withFormContext = require(\"../../form/withFormContext\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar OpeningHoursWeekRaw =\n/*#__PURE__*/\nfunction (_BaseInput) {\n  _inherits(OpeningHoursWeekRaw, _BaseInput);\n\n  function OpeningHoursWeekRaw(props) {\n    var _this;\n\n    _classCallCheck(this, OpeningHoursWeekRaw);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OpeningHoursWeekRaw).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onOpeningHoursChange\", function (index, day) {\n      return function (openingHours) {\n        var days = _this.props.days.slice(0);\n\n        days[index] = _objectSpread({}, day, openingHours, {\n          isStandardDay: false\n        });\n\n        _this.props.onDaysChange(days);\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"isStandardDayChecked\", function (index, day) {\n      return function (checked) {\n        var days = _this.props.days.slice(0);\n\n        days[index] = _objectSpread({}, day, {\n          isStandardDay: checked.target.checked\n        });\n\n        _this.props.onDaysChange(days);\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"standardDayChanged\", function (openingHours) {\n      _this.props.onStandardDayChange(openingHours);\n    });\n\n    _this.state = _objectSpread({}, _this.state);\n    return _this;\n  }\n\n  _createClass(OpeningHoursWeekRaw, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (!this.props.days || !this.props.days.length) {\n        this.props.onDaysChange([{\n          dayLabel: 'Monday',\n          times: []\n        }, {\n          dayLabel: 'Tuesday',\n          times: []\n        }, {\n          dayLabel: 'Wednesday',\n          times: []\n        }, {\n          dayLabel: 'Thursday',\n          times: []\n        }, {\n          dayLabel: 'Friday',\n          times: []\n        }, {\n          dayLabel: 'Saturday',\n          times: []\n        }, {\n          dayLabel: 'Sunday',\n          times: []\n        }]);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (!newProps.days || !newProps.days.length) {\n        newProps.onDaysChange([{\n          dayLabel: 'Monday',\n          times: []\n        }, {\n          dayLabel: 'Tuesday',\n          times: []\n        }, {\n          dayLabel: 'Wednesday',\n          times: []\n        }, {\n          dayLabel: 'Thursday',\n          times: []\n        }, {\n          dayLabel: 'Friday',\n          times: []\n        }, {\n          dayLabel: 'Saturday',\n          times: []\n        }, {\n          dayLabel: 'Sunday',\n          times: []\n        }]);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: 'openingHoursWeek-input ' + this.getValidationClass() + ' ' + (this.props.className ? this.props.className : ''),\n        ref: this.containerRef\n      }, this.renderContent());\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"\"\n      }, this.props.standardDay && React.createElement(_OpeningHoursDay.OpeningHoursDay, {\n        className: \"openingHoursWeek__standard-day\",\n        label: React.createElement(\"span\", null, _OpeningHoursUtil.default.getLabelSuffix(this.props.standardDay)),\n        openingHours: {\n          times: this.props.standardDay.times\n        },\n        onOpeningHoursChange: this.standardDayChanged,\n        title: 'Standard day',\n        tooltip: React.createElement(\"p\", null, \"We recommend to use \", React.createElement(\"b\", null, \"Standard day\"), \" if multiple days share the same opening hours. Check \\\"Standard day?\\\" checkbox for each of these days to make them share standard opening hours.\")\n      }), this.props.days.map(function (day, index) {\n        return React.createElement(_OpeningHoursDay.OpeningHoursDay, {\n          className: '',\n          key: index,\n          label: _this2.props.standardDay ? React.createElement(\"span\", null, _OpeningHoursUtil.default.getLabelSuffix(_this2.props.standardDay && day.isStandardDay ? _this2.props.standardDay : day), React.createElement(\"span\", {\n            className: \"float-right\"\n          }, \"Standard day?\", React.createElement(_Checkbox.Checkbox, {\n            className: \"label__checkbox\",\n            checked: day.isStandardDay,\n            onChecked: _this2.isStandardDayChecked(index, day)\n          }))) : day.dayLabel,\n          openingHours: {\n            times: _this2.props.standardDay && day.isStandardDay ? _this2.props.standardDay.times : day.times\n          },\n          onOpeningHoursChange: _this2.onOpeningHoursChange(index, day),\n          title: day.dayLabel\n        });\n      }), React.createElement(\"span\", {\n        className: \"bar\"\n      }), this.renderDefaultValidation());\n    }\n  }]);\n\n  return OpeningHoursWeekRaw;\n}(_BaseInput2.BaseInput);\n\nexports.OpeningHoursWeekRaw = OpeningHoursWeekRaw;\n\n_defineProperty(OpeningHoursWeekRaw, \"defaultProps\", Object.assign({}, _BaseInput2.BaseInput.defaultProps, {\n  type: 'openingHoursWeek',\n  placeholder: '',\n  collapsable: false\n}));\n\nvar OpeningHoursWeek = (0, _withFormContext.withFormContext)(OpeningHoursWeekRaw);\nexports.OpeningHoursWeek = OpeningHoursWeek;\nvar _default = OpeningHoursWeek;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}