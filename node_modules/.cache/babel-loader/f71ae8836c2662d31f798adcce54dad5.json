{"ast":null,"code":"(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['kefir'], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('kefir'));\n  } else {\n    root.KefirBus = factory(root.Kefir);\n  }\n})(this, function (Kefir) {\n  var dummyPool = {\n    plug: function plug() {},\n    unplug: function unplug() {}\n  };\n  return function kefirBus() {\n    var ended = false;\n    var pool = Kefir.pool();\n    var emitter = null;\n    var stream = Kefir.stream(function (_emitter) {\n      function sub(event) {\n        _emitter.emitEvent(event);\n      }\n\n      emitter = _emitter;\n\n      if (ended) {\n        _emitter.end();\n      } else {\n        pool.onAny(sub);\n        return function () {\n          emitter = null;\n          pool.offAny(sub);\n        };\n      }\n    });\n\n    stream.value = stream.emit = function (x) {\n      if (emitter) emitter.emit(x);\n      return stream;\n    };\n\n    stream.error = function (err) {\n      if (emitter) emitter.error(err);\n      return stream;\n    };\n\n    stream.event = stream.emitEvent = function (event) {\n      if (event.type === 'end') {\n        stream.end();\n      } else {\n        if (emitter) emitter.emitEvent(event);\n      }\n\n      return stream;\n    };\n\n    stream.plug = function (s) {\n      pool.plug(s);\n      return stream;\n    };\n\n    stream.unplug = function (s) {\n      pool.unplug(s);\n      return stream;\n    };\n\n    stream.end = function () {\n      if (!ended) {\n        ended = true;\n        if (emitter) emitter.end();\n        pool = dummyPool;\n      }\n\n      return stream;\n    };\n\n    return stream.setName('bus');\n  };\n});","map":null,"metadata":{},"sourceType":"script"}