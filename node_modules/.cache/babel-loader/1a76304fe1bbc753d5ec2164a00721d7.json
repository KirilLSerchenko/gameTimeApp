{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.OpeningHoursDay = exports.OpeningHoursDayRaw = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _Time = require(\"../../time/Time\");\n\nvar _OpeningHoursUtil = _interopRequireDefault(require(\"../utils/OpeningHoursUtil\"));\n\nvar _InputGroup = _interopRequireDefault(require(\"../../inputGroup/InputGroup\"));\n\nvar _BaseInput2 = require(\"../../base/input/BaseInput\");\n\nvar _Button = require(\"../../button/Button\");\n\nvar _withFormContext = require(\"../../form/withFormContext\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar PlusIcon = function PlusIcon(props) {\n  return React.createElement(\"svg\", props, React.createElement(\"path\", {\n    d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n  }));\n};\n\nPlusIcon.defaultProps = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"24\",\n  height: \"24\",\n  viewBox: \"0 0 24 24\"\n}; // Libs\n\nvar OpeningHoursDayRaw =\n/*#__PURE__*/\nfunction (_BaseInput) {\n  _inherits(OpeningHoursDayRaw, _BaseInput);\n\n  function OpeningHoursDayRaw(props) {\n    var _this;\n\n    _classCallCheck(this, OpeningHoursDayRaw);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OpeningHoursDayRaw).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"fullDayMilliseconds\", 24 * 60 * 60 * 1000);\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"addTimeClick\", function () {\n      var newTime = new Date(_this.props.openingHours && _this.props.openingHours.times && _this.props.openingHours.times.length ? _this.props.openingHours.times[_this.props.openingHours.times.length - 1] : _this.getTime(8, 0));\n\n      if (newTime.getHours() < 23) {\n        newTime.setHours(newTime.getHours() + 1);\n      }\n\n      _this.props.onOpeningHoursChange(_objectSpread({}, _this.props.openingHours, {\n        times: _this.props.openingHours.times.concat([newTime])\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"removeTimeClick\", function (index) {\n      return function () {\n        return _this.props.onOpeningHoursChange(_objectSpread({}, _this.props.openingHours, {\n          times: _this.props.openingHours.times.filter(function (time, itemIndex) {\n            return itemIndex !== index;\n          })\n        }));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"timeChanged\", function (index) {\n      return function (time) {\n        var newOpeningHours = _objectSpread({}, _this.props.openingHours, {\n          times: _this.props.openingHours.times.slice(0)\n        });\n\n        newOpeningHours.times[index] = time;\n\n        _this.props.onOpeningHoursChange(newOpeningHours);\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(OpeningHoursDayRaw, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(_InputGroup.default, {\n        title: this.props.title,\n        className: 'input__group__openingHoursDay ' + (this.props.className ? ' ' + this.props.className : ''),\n        tooltip: this.props.tooltip\n      }, React.createElement(\"div\", {\n        className: 'input__base openingHoursDay-input ' + this.getValidationClass(),\n        ref: this.containerRef\n      }, React.createElement(\"div\", {\n        className: \"openingHoursDay-input__container\"\n      }, this.props.openingHours && this.props.openingHours.times && this.props.openingHours.times.map(function (item, index) {\n        var previousTime = index > 0 ? new Date(_this2.props.openingHours.times[index - 1]) : _this2.getTime(0, 0);\n        var nextTime = _this2.props.openingHours.times.length - 1 > index ? new Date(_this2.props.openingHours.times[index + 1]) : _this2.getTime(23, 59);\n        return React.createElement(\"div\", {\n          className: \"openingHoursDay-input__time__container\",\n          key: index\n        }, React.createElement(\"span\", {\n          className: \"openingHoursDay-input__label\"\n        }, index % 2 === 0 ? 'Opens' : 'Closes'), React.createElement(_Time.Time, {\n          className: 'openingHoursDay-input__time',\n          timeChange: _this2.timeChanged(index),\n          time: item,\n          min: previousTime,\n          max: nextTime\n        }), React.createElement(_Button.Button, {\n          onClick: _this2.removeTimeClick(index),\n          className: \"openingHoursDay-input__button--remove mr-5 line-height--0\",\n          circular: true,\n          blank: true,\n          type: \"error\"\n        }, React.createElement(PlusIcon, null)));\n      }), this.props.maxOpenCloseTimes > this.props.openingHours.times.length && React.createElement(_Button.Button, {\n        className: \"openingHoursDay-input__button-open-close\",\n        onClick: this.addTimeClick,\n        type: 'primary',\n        hero: true\n      }, this.props.openingHours && this.props.openingHours.times && this.props.openingHours.times.length % 2 === 0 ? 'Open' : 'Close')), this.renderDefaultValidation(), this.props.openingHours && this.props.label && React.createElement(\"span\", {\n        className: 'label-classname ' + (this.props.openingHours && this.props.openingHours.times && this.props.openingHours.times.length ? 'label--focused' : 'label--focused label--closed')\n      }, this.renderLabel(true))), this.getBottomBorder());\n    }\n  }, {\n    key: \"getBottomBorder\",\n    value: function getBottomBorder() {\n      var parts = [];\n\n      if (this.props.openingHours && this.props.openingHours.times && !this.props.openingHours.times.length) {\n        parts = parts.concat([1]);\n      } else {\n        parts = parts.concat([_OpeningHoursUtil.default.getTimeFromMidnight(this.props.openingHours.times[0]) / this.fullDayMilliseconds]);\n\n        for (var index = 0; index < this.props.openingHours.times.length - 1; index++) {\n          var start = _OpeningHoursUtil.default.getTimeFromMidnight(this.props.openingHours.times[index]);\n\n          var end = _OpeningHoursUtil.default.getTimeFromMidnight(this.props.openingHours.times[index + 1]);\n\n          var diff = (end - start) / this.fullDayMilliseconds;\n          parts = parts.concat([diff]);\n        }\n\n        parts = parts.concat([(this.fullDayMilliseconds - _OpeningHoursUtil.default.getTimeFromMidnight(this.props.openingHours.times[this.props.openingHours.times.length - 1])) / this.fullDayMilliseconds]);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"openingHoursDay-input__bottom-border__container\"\n      }, parts.map(function (part, i) {\n        return React.createElement(\"div\", {\n          key: i,\n          className: 'openingHoursDay-input__bottom-border ' + (i % 2 === 0 ? 'openingHoursDay-input__bottom-border--closed' : 'openingHoursDay-input__bottom-border--open'),\n          style: {\n            width: part ? (part * 100).toFixed(2) + '%' : '0'\n          }\n        });\n      }));\n    }\n  }, {\n    key: \"getTime\",\n    value: function getTime(hours, minutes) {\n      var time = new Date();\n      time.setHours(hours);\n      time.setMinutes(minutes);\n      time.setSeconds(0);\n      return time;\n    }\n  }]);\n\n  return OpeningHoursDayRaw;\n}(_BaseInput2.BaseInput);\n\nexports.OpeningHoursDayRaw = OpeningHoursDayRaw;\n\n_defineProperty(OpeningHoursDayRaw, \"defaultProps\", Object.assign({}, _BaseInput2.BaseInput.defaultProps, {\n  type: 'openingHours',\n  allowMultiple: false,\n  maxOpenCloseTimes: 10\n}));\n\nvar OpeningHoursDay = (0, _withFormContext.withFormContext)(OpeningHoursDayRaw);\nexports.OpeningHoursDay = OpeningHoursDay;\nvar _default = OpeningHoursDay;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}