{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.OpeningHoursUtil = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar OpeningHoursUtil =\n/*#__PURE__*/\nfunction () {\n  function OpeningHoursUtil() {\n    _classCallCheck(this, OpeningHoursUtil);\n  }\n\n  _createClass(OpeningHoursUtil, [{\n    key: \"getTimeFromMidnight\",\n    value: function getTimeFromMidnight(time) {\n      return (time.getTime() - time.getTimezoneOffset() * 60000) % 86400000;\n    }\n  }, {\n    key: \"getTotalTimeString\",\n    value: function getTotalTimeString(times) {\n      var _this = this;\n\n      var totalTime = 0;\n      var newTimes = times.slice(0).map(function (item) {\n        return _this.getTimeFromMidnight(item);\n      });\n\n      if (times.length % 2 === 1) {\n        newTimes = newTimes.concat([86400000 + 60 * 1000]);\n      }\n\n      for (var index = 0; index < newTimes.length - 1; index++) {\n        if (index % 2 === 0) {\n          var time = newTimes[index];\n          var nextTime = newTimes[index + 1];\n          totalTime += nextTime - time;\n        }\n      }\n\n      var hours = Math.floor(totalTime / 3600000);\n      var minutes = Math.floor(totalTime / (60 * 1000)) % 60;\n      var hoursFormated = hours ? hours.toFixed(0) + ' hour' + (hours > 1 ? 's' : '') : '';\n      var minutesFormated = minutes ? minutes.toFixed(0) + ' minute' + (minutes > 1 ? 's' : '') : '';\n\n      if (hoursFormated && minutesFormated) {\n        return React.createElement(\"span\", null, \"Open \", hoursFormated, \" and \", minutesFormated);\n      }\n\n      if (hoursFormated) {\n        return React.createElement(\"span\", null, \"Open \", hoursFormated);\n      }\n\n      if (minutesFormated) {\n        return React.createElement(\"span\", null, \"Open \", minutesFormated);\n      }\n\n      return React.createElement(\"span\", null, \"Closed\");\n    }\n  }, {\n    key: \"getLabelSuffix\",\n    value: function getLabelSuffix(day) {\n      return day && day.times && day.times.length === 0 ? 'Closed' : this.getTotalTimeString(day.times);\n    }\n  }]);\n\n  return OpeningHoursUtil;\n}();\n\nexports.OpeningHoursUtil = OpeningHoursUtil;\nvar util = new OpeningHoursUtil();\nvar _default = util;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}