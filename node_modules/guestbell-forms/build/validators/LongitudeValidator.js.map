{"version":3,"sources":["../../src/lib/validators/LongitudeValidator.ts"],"names":["LongitudeValidator","value","isRequired","addError","validNumber","NumberValidator","Validate","num","Number"],"mappings":";;;;;;;AACA;;;;;;;;IAEaA,kB;;;;;;;;;6BACKC,K,EAAeC,U,EAAqBC,Q,EAA4C;AAC9F,UAAIC,WAAW,GAAG,IAAIC,gCAAJ,GAAsBC,QAAtB,CAA+BL,KAA/B,EAAsCC,UAAtC,EAAkDC,QAAlD,CAAlB;;AACA,UAAIC,WAAJ,EAAiB;AACf,YAAIG,GAAG,GAAGC,MAAM,CAACP,KAAD,CAAhB;;AACA,YAAI,CAAC,GAAD,GAAOM,GAAP,IAAcA,GAAG,GAAG,GAAxB,EAA6B;AAC3BJ,UAAAA,QAAQ,CAAC,mBAAD,CAAR;AACA,iBAAO,KAAP;AACD;;AACD,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD","sourcesContent":["import { IBaseValidator } from './base';\r\nimport { NumberValidator } from './NumberValidator';\r\n\r\nexport class LongitudeValidator implements IBaseValidator {\r\n  public Validate(value: string, isRequired: boolean, addError: (error: string) => void): boolean {\r\n    let validNumber = new NumberValidator().Validate(value, isRequired, addError);\r\n    if (validNumber) {\r\n      let num = Number(value);\r\n      if (-180 > num || num > 180) {\r\n        addError('Invalid longitude');\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}"],"file":"LongitudeValidator.js"}