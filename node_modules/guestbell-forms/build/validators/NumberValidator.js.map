{"version":3,"sources":["../../src/lib/validators/NumberValidator.ts"],"names":["NumberValidator","config","min","undefined","max","value","isRequired","addError","num","Number","isNaN"],"mappings":";;;;;;;;;;;;;;;IAMaA,e;;;AAEX,6BAAgF;AAAA,QAApEC,MAAoE,uEAApC;AAAEC,MAAAA,GAAG,EAAEC,SAAP;AAAkBC,MAAAA,GAAG,EAAED;AAAvB,KAAoC;;AAAA;;AAAA;;AAC9E,SAAKF,MAAL,GAAcA,MAAd;AACD;;;;6BACeI,K,EAAeC,U,EAAqBC,Q,EAA4C;AAC9F,UAAIC,GAAG,GAAGC,MAAM,CAACJ,KAAD,CAAhB;;AACA,UAAI,CAACK,KAAK,CAACF,GAAD,CAAV,EAAiB;AACf,YAAI,KAAKP,MAAL,CAAYC,GAAZ,KAAoBC,SAApB,IAAiCK,GAAG,IAAI,KAAKP,MAAL,CAAYC,GAAxD,EAA6D;AAC3DK,UAAAA,QAAQ,CAAC,UAAU,KAAKN,MAAL,CAAYC,GAAvB,CAAR;AACA,iBAAO,KAAP;AACD;;AACD,YAAI,KAAKD,MAAL,CAAYG,GAAZ,KAAoBD,SAApB,IAAiCK,GAAG,IAAI,KAAKP,MAAL,CAAYG,GAAxD,EAA6D;AAC3DG,UAAAA,QAAQ,CAAC,WAAW,KAAKN,MAAL,CAAYG,GAAZ,GAAkB,CAA7B,CAAD,CAAR;AACA,iBAAO,KAAP;AACD;;AACD,eAAO,IAAP;AACD;;AACDG,MAAAA,QAAQ,CAAC,gBAAD,CAAR;AACA,aAAO,KAAP;AACD","sourcesContent":["import { IBaseValidator } from './base';\r\nexport interface NumberValidatorConfig {\r\n  min?: number;\r\n  max?: number;\r\n}\r\n\r\nexport class NumberValidator implements IBaseValidator {\r\n  private config: NumberValidatorConfig;\r\n  constructor(config: NumberValidatorConfig = { min: undefined, max: undefined }) {\r\n    this.config = config;\r\n  }\r\n  public Validate(value: string, isRequired: boolean, addError: (error: string) => void): boolean {\r\n    let num = Number(value);\r\n    if (!isNaN(num)) {\r\n      if (this.config.min !== undefined && num <= this.config.min) {\r\n        addError('Min: ' + this.config.min);\r\n        return false;\r\n      }\r\n      if (this.config.max !== undefined && num >= this.config.max) {\r\n        addError('Max: ' + (this.config.max - 1));\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n    addError('Invalid number');\r\n    return false;\r\n  }\r\n}\r\n"],"file":"NumberValidator.js"}