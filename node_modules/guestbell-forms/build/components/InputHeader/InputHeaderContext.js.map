{"version":3,"sources":["../../../src/lib/components/inputHeader/InputHeaderContext.ts"],"names":["InputHeaderContext","React","createContext","undefined","InputHeaderContextProvider","Provider","InputHeaderContextConsumer","Consumer"],"mappings":";;;;;;;AAAA;;;;AA0BA,IAAMA,kBAAkB,GAAGC,KAAK,CAACC,aAAN,CAAyDC,SAAzD,CAA3B;AACO,IAAMC,0BAA0B,GAAGJ,kBAAkB,CAACK,QAAtD;;AACA,IAAMC,0BAA0B,GAAGN,kBAAkB,CAACO,QAAtD","sourcesContent":["import * as React from 'react';\r\nimport { Omit } from '../utils/Typescript';\r\nimport { InputHeaderApi, InputHeaderProps, InputHeaderState } from './InputHeader';\r\n\r\nexport type OmitInputHeaderContext<P extends InputHeaderContextProps> = Omit<P, 'inputHeaderContext'>;\r\n\r\nexport interface InputHeaderComponentContextState {\r\n  props: InputHeaderProps;\r\n  state: InputHeaderState;\r\n  componentApi: InputHeaderApi;\r\n  componentId: string;\r\n}\r\n\r\nexport type InputHeaderComponentsDict = { [componentId: string]: InputHeaderComponentContextState };\r\n\r\nexport interface InputHeaderContextState {\r\n  registerInputHeader: (componentId: string, component: InputHeaderComponentContextState) => void;\r\n  unregisterInputHeader: (componentId: string) => void;\r\n  stateChanged: () => void;\r\n  components: InputHeaderComponentsDict;\r\n}\r\n\r\nexport interface InputHeaderContextProps {\r\n  inputHeaderContext: InputHeaderContextState;\r\n}\r\n\r\nconst InputHeaderContext = React.createContext<InputHeaderContextState | undefined>(undefined);\r\nexport const InputHeaderContextProvider = InputHeaderContext.Provider;\r\nexport const InputHeaderContextConsumer = InputHeaderContext.Consumer;"],"file":"InputHeaderContext.js"}