{"version":3,"sources":["../../../src/lib/components/inputHeader/InputHeader.tsx"],"names":["classNames","require","MoreIcon","PlusIcon","CollapseExpandButtonComponent","props","className","onClick","children","InputHeaderRaw","setState","previousState","smoothCollapseDone","toggle","e","stopPropagation","Object","keys","state","inputHeaderContext","components","forEach","key","component","componentApi","expand","collapse","collapsed","collapsedDefault","registerInputHeader","unregisterInputHeader","stateChanged","forceUpdate","bind","ignoreContext","componentId","collapsable","getTypeClass","showExpandAll","noBg","shouldToggleCollapseOnHeaderClick","headerClassName","undefined","toggleClick","icon","title","subTitle","renderMainButton","extraButtons","extraButtonsButtonProps","renderExtraButtons","collapseButtonsButtonProps","length","renderCollapseExpandAll","contentClassName","assign","type","child","mainButton","mainButtonClick","arr","map","extraButton","index","allCollapsed","allExpanded","containerClick","expandAllClick","collapseAllClick","React","PureComponent","InputHeader"],"mappings":"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","sourcesContent":["// Libs\r\nimport * as React from 'react';\r\nconst classNames = require('classnames');\r\n\r\n// Misc\r\nimport * as MoreIcon from 'material-design-icons/navigation/svg/production/ic_more_vert_24px.svg';\r\nimport * as PlusIcon from 'material-design-icons/hardware/svg/production/ic_keyboard_arrow_down_24px.svg';\r\nimport { ButtonProps, Button, ButtonComponentProps } from '../button/Button';\r\nimport guid from '../utils/Guid';\r\nimport { Dropdown } from '../dropdown/Dropdown';\r\nimport { SmoothCollapse } from '../smoothCollapse/SmoothCollapse';\r\nimport { OmitInputHeaderContext, InputHeaderContextProps, InputHeaderContextState, InputHeaderComponentContextState } from '../InputHeader/InputHeaderContext';\r\nimport { withInputHeaderContext } from './withInputHeaderContext';\r\nimport { InnerRefProps } from './../../types/InnerRefProps';\r\n\r\nexport type InputHeaderRawProps = {\r\n  className?: string;\r\n  title?: string | JSX.Element;\r\n  icon?: string | JSX.Element;\r\n  subTitle?: string | JSX.Element;\r\n  mainButton?: JSX.Element;\r\n  extraButtons?: JSX.Element[];\r\n  collapsable?: boolean;\r\n  collapsed?: boolean;\r\n  collapsedDefault?: boolean;\r\n  ignoreContext?: boolean;\r\n  showExpandAll?: boolean;\r\n  type?: 'hero' | 'standard' | 'small';\r\n  noBg?: boolean;\r\n  headerClassName?: string;\r\n  contentClassName?: string;\r\n  extraButtonsButtonProps?: ButtonProps;\r\n  collapseButtonsButtonProps?: ButtonProps;\r\n  shouldToggleCollapseOnHeaderClick?: boolean;\r\n} & InputHeaderContextProps;\r\n\r\nexport type InputHeaderProps = OmitInputHeaderContext<InputHeaderRawProps> & InnerRefProps<InputHeaderRaw>;\r\n\r\nexport interface InputHeaderApi {\r\n  expand: () => void;\r\n  collapse: () => void;\r\n  toggle: () => void;\r\n}\r\n\r\nexport interface InputHeaderState {\r\n  collapsed: boolean;\r\n  inputHeaderContext: InputHeaderContextState;\r\n  smoothCollapseDone: boolean;\r\n}\r\n\r\nconst CollapseExpandButtonComponent: React.SFC<ButtonComponentProps> = props => (\r\n  <a className={props.className} onClick={props.onClick} href=\"#\">\r\n    {props.children}\r\n  </a>\r\n);\r\n\r\nexport class InputHeaderRaw extends React.PureComponent<InputHeaderRawProps, InputHeaderState> implements InputHeaderApi {\r\n  public static defaultProps: InputHeaderProps = {\r\n    ignoreContext: false,\r\n    showExpandAll: false,\r\n    collapsedDefault: true,\r\n    type: 'standard',\r\n    noBg: false,\r\n    shouldToggleCollapseOnHeaderClick: false\r\n  };\r\n\r\n  public componentId = guid();\r\n\r\n  constructor(props: InputHeaderRawProps) {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: props.collapsedDefault,\r\n      inputHeaderContext: {\r\n        registerInputHeader: this.registerInputHeader,\r\n        unregisterInputHeader: this.unregisterInputHeader,\r\n        stateChanged: () => this.forceUpdate(),\r\n        components: {}\r\n      },\r\n      smoothCollapseDone: true\r\n    };\r\n    this.registerInputHeader = this.registerInputHeader.bind(this);\r\n    this.unregisterInputHeader = this.unregisterInputHeader.bind(this);\r\n    this.expand = this.expand.bind(this);\r\n    this.collapse = this.collapse.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (!this.props.ignoreContext && this.props.inputHeaderContext) {\r\n      this.props.inputHeaderContext.unregisterInputHeader(this.componentId);\r\n    }\r\n  }\r\n\r\n  public componentDidMount() {\r\n    if (!this.props.ignoreContext && this.props.inputHeaderContext) {\r\n      this.props.inputHeaderContext.registerInputHeader(this.componentId, {\r\n        componentId: this.componentId,\r\n        componentApi: {\r\n          expand: this.expand,\r\n          collapse: this.collapse,\r\n          toggle: this.toggle,\r\n        },\r\n        props: { ...{}, ...this.props as InputHeaderProps },\r\n        state: { ...{}, ...this.state }\r\n      });\r\n    }\r\n  }\r\n\r\n  public expand() {\r\n    this.props.collapsable && this.setState({ collapsed: false, smoothCollapseDone: false },\r\n      () => this.props.inputHeaderContext && this.props.inputHeaderContext.stateChanged());\r\n  }\r\n\r\n  public collapse() {\r\n    this.props.collapsable && this.setState({ collapsed: true, smoothCollapseDone: false },\r\n      () => this.props.inputHeaderContext && this.props.inputHeaderContext.stateChanged());\r\n  }\r\n\r\n  public toggle() {\r\n    this.props.collapsable && this.setState({ collapsed: !this.state.collapsed, smoothCollapseDone: false },\r\n      () => this.props.inputHeaderContext && this.props.inputHeaderContext.stateChanged());\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div\r\n        className={`input__header ` + (this.props.className ? this.props.className : '') + ' ' + (this.getTypeClass())}\r\n      >\r\n        <div\r\n          className={classNames('input__header__top',\r\n            { 'input__header__top--tall': this.props.showExpandAll },\r\n            { 'input__header__top--no-bg': this.props.noBg },\r\n            { 'input__header__top--clickable': this.props.shouldToggleCollapseOnHeaderClick },\r\n            this.props.headerClassName)}\r\n          role={(this.props.shouldToggleCollapseOnHeaderClick ? 'button' : undefined)}\r\n          onClick={(this.props.collapsable && this.props.shouldToggleCollapseOnHeaderClick ? this.toggleClick : undefined)}\r\n        >\r\n          <div className={'input__header__top__header-container '}>\r\n            {this.props.icon && <div className=\"input__header__icon line-height--0\">\r\n              {this.props.icon}\r\n            </div>}\r\n            {this.props.title && <div className=\"input__header__title\">\r\n              {this.props.title}\r\n            </div>}\r\n            {this.props.subTitle &&\r\n              <div className=\"input__header__sub-title\">\r\n                {this.props.subTitle}\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"input__header__top__button-container\">\r\n            {this.renderMainButton()}\r\n            {this.props.extraButtons ?\r\n              <Dropdown\r\n                header={<Button blank={true} circular={true} {...this.props.extraButtonsButtonProps}><MoreIcon /></Button>}\r\n                showArrow={false}\r\n                headerClassName={'line-height--0'}\r\n                className={''}\r\n              >\r\n                {this.renderExtraButtons()}\r\n              </Dropdown>\r\n              :\r\n              null\r\n            }\r\n            {this.props.collapsable &&\r\n              <Button\r\n                circular={true}\r\n                blank={true}\r\n                className={`input__header__collapse-button line-height--0 ${(this.state.collapsed ? 'collapsed' : '')}`}\r\n                {...this.props.collapseButtonsButtonProps}\r\n                onClick={this.toggleClick}\r\n              >\r\n                <PlusIcon />\r\n              </Button>}\r\n          </div>\r\n          {this.props.showExpandAll && Object.keys(this.state.inputHeaderContext.components).length > 0 &&\r\n            this.renderCollapseExpandAll()}\r\n        </div>\r\n        <div className={'input__header__bottom ' + (this.props.contentClassName ? this.props.contentClassName : '')}>\r\n          {\r\n            this.props.collapsable ?\r\n              <div className={(!this.state.collapsed && this.state.smoothCollapseDone ? 'smooth-collapse__container' : '')}>\r\n                <SmoothCollapse\r\n                  collapsedHeight={'0.0001px'}\r\n                  expanded={this.props.collapsed !== undefined ? !this.props.collapsed : !this.state.collapsed}\r\n                  onChangeEnd={this.smoothCollapseDone}\r\n                >\r\n                  {this.props.children}\r\n                </SmoothCollapse>\r\n              </div>\r\n              :\r\n              this.props.children\r\n          }\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n\r\n  private smoothCollapseDone = () => this.setState(previousState => ({ smoothCollapseDone: true }));\r\n\r\n  private toggleClick = () => this.toggle();\r\n\r\n  private registerInputHeader(componentId: string, component: InputHeaderComponentContextState) {\r\n    this.setState(previousState => {\r\n      let components = Object.assign({}, previousState.inputHeaderContext.components);\r\n      components[componentId] = component;\r\n      return {\r\n        inputHeaderContext: { ...previousState.inputHeaderContext, components }\r\n      };\r\n    });\r\n  }\r\n\r\n  private unregisterInputHeader(componentId: string) {\r\n    this.setState(previousState => {\r\n      let components = Object.assign({}, previousState.inputHeaderContext.components);\r\n      delete components[componentId];\r\n      return {\r\n        inputHeaderContext: { ...previousState.inputHeaderContext, components }\r\n      };\r\n    });\r\n  }\r\n\r\n  private getTypeClass() {\r\n    switch (this.props.type) {\r\n      case 'hero':\r\n        return 'input__header--hero';\r\n      case 'small':\r\n        return 'input__header--small';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  private mainButtonClick = (e: React.MouseEvent<HTMLDivElement>) => e.stopPropagation();\r\n\r\n  private renderMainButton() {\r\n    let child = undefined;\r\n    if (typeof this.props.mainButton === 'function') {\r\n      child = this.props.mainButton;\r\n    } else {\r\n      child = this.props.mainButton;\r\n    }\r\n    return <div onClick={this.mainButtonClick}>{child}</div>;\r\n  }\r\n\r\n  private renderExtraButtons() {\r\n    let arr = [];\r\n    if (typeof this.props.extraButtons === 'function') {\r\n      arr = this.props.extraButtons;\r\n    } else {\r\n      arr = this.props.extraButtons;\r\n    }\r\n\r\n    return arr.map((extraButton, index) => (\r\n      <li\r\n        key={index}\r\n      >\r\n        {extraButton}\r\n      </li>\r\n    ));\r\n  }\r\n\r\n  private renderCollapseExpandAll() {\r\n    let allCollapsed = true;\r\n    let allExpanded = true;\r\n    Object.keys(this.state.inputHeaderContext.components).forEach(key => {\r\n      const component = this.state.inputHeaderContext.components[key];\r\n      if (component && component.props.collapsable) {\r\n        if (component.state.collapsed) {\r\n          allExpanded = false;\r\n        } else {\r\n          allCollapsed = false;\r\n        }\r\n      }\r\n    });\r\n    return (\r\n      <div\r\n        className=\"input__header__expand-collapse--all\"\r\n        onClick={this.containerClick}\r\n      >\r\n        {(allCollapsed || !allExpanded) && <Button\r\n          noRipples={true}\r\n          small={true}\r\n          className={((allExpanded || !allCollapsed) ? 'mr-2' : '')}\r\n          onClick={this.expandAllClick}\r\n          blank={true}\r\n          Component={CollapseExpandButtonComponent}\r\n        >\r\n          Expand all\r\n                </Button>}\r\n        {(allExpanded || !allCollapsed) && <Button\r\n          noRipples={true}\r\n          small={true}\r\n          onClick={this.collapseAllClick}\r\n          blank={true}\r\n          Component={CollapseExpandButtonComponent}\r\n        >\r\n          Collapse all\r\n                </Button>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private containerClick = (e: React.MouseEvent<HTMLDivElement>) => e.stopPropagation();\r\n\r\n  private expandAllClick = () => {\r\n    Object.keys(this.state.inputHeaderContext.components).forEach(key => {\r\n      const component = this.state.inputHeaderContext.components[key];\r\n      component.componentApi.expand();\r\n    });\r\n  }\r\n\r\n  private collapseAllClick = () => {\r\n    Object.keys(this.state.inputHeaderContext.components).forEach(key => {\r\n      const component = this.state.inputHeaderContext.components[key];\r\n      component.componentApi.collapse();\r\n    });\r\n  }\r\n}\r\n\r\nexport const InputHeader = withInputHeaderContext<InputHeaderRawProps, InputHeaderProps>(InputHeaderRaw);\r\n\r\nexport default InputHeader;\r\n"],"file":"InputHeader.js"}