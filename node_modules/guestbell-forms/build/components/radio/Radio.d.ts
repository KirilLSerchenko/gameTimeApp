import * as React from 'react';
import { BaseInputProps, BaseInputState, BaseInput } from '../base/input/BaseInput';
import { OmitFormContext } from '../form/FormContext';
import { InnerRefProps } from './../../types/InnerRefProps';
export interface RadioRawProps extends BaseInputProps<HTMLInputElement> {
    onChange?: never;
    onChecked: (value: string) => void;
    result: string;
    value: string;
    name: string;
}
export declare type RadioProps = OmitFormContext<RadioRawProps> & InnerRefProps<RadioRaw>;
export interface RadioState extends BaseInputState {
}
export declare class RadioRaw extends BaseInput<RadioRawProps, RadioState, HTMLInputElement> {
    static defaultProps: BaseInputProps<never>;
    constructor(props: RadioRawProps);
    render(): JSX.Element;
    private renderInput;
    private onChecked;
}
export declare const Radio: React.StatelessComponent<RadioProps>;
export default Radio;
