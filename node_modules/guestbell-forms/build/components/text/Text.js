"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Text = exports.TextRaw = void 0;

var React = _interopRequireWildcard(require("react"));

var _InputGroup = _interopRequireDefault(require("../inputGroup/InputGroup"));

var _BaseInput2 = require("../base/input/BaseInput");

var _withFormContext = require("../form/withFormContext");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var TextRaw =
/*#__PURE__*/
function (_BaseInput) {
  _inherits(TextRaw, _BaseInput);

  function TextRaw(props) {
    var _this;

    _classCallCheck(this, TextRaw);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextRaw).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "containerClick", function (e) {
      return _this.props.stopClickPropagation && e.stopPropagation();
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onKeyDown", function (e) {
      return _this.props.onKeyDown && _this.props.onKeyDown(e);
    });

    return _this;
  }

  _createClass(TextRaw, [{
    key: "render",
    value: function render() {
      return React.createElement(_InputGroup.default, {
        title: this.props.title
      }, React.createElement("div", {
        className: "input__base text-input ".concat(this.getValidationClass(), " \n                    ").concat(this.props.readOnly ? 'text-input--readOnly' : '', " ").concat(this.props.className ? this.props.className : ''),
        onClick: this.containerClick,
        ref: this.containerRef
      }, React.createElement("input", {
        ref: this.inputRef,
        placeholder: this.props.placeholder,
        disabled: this.getDisabled(),
        required: this.props.required,
        className: this.state.value ? 'filled' : '',
        onChange: this.handleChange,
        value: this.state.value,
        onBlur: this.handleBlur,
        onFocus: this.handleFocus,
        readOnly: this.props.readOnly,
        onKeyDown: this.onKeyDown,
        type: this.props.type
      }), React.createElement("span", {
        className: "highlight"
      }), React.createElement("span", {
        className: "bar"
      }), this.renderDefaultValidation(), this.props.label && React.createElement("label", {
        className: this.props.readOnly ? 'label--focused' : ''
      }, this.renderLabel())));
    }
  }]);

  return TextRaw;
}(_BaseInput2.BaseInput);

exports.TextRaw = TextRaw;

_defineProperty(TextRaw, "defaultProps", Object.assign({}, _BaseInput2.BaseInput.defaultProps, {
  type: 'text',
  placeholder: '',
  stopClickPropagation: true,
  readOnly: false
}));

var Text = (0, _withFormContext.withFormContext)(TextRaw);
exports.Text = Text;
var _default = Text;
exports.default = _default;
//# sourceMappingURL=Text.js.map