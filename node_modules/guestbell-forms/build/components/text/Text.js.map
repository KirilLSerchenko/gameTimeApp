{"version":3,"sources":["../../../src/lib/components/text/Text.tsx"],"names":["TextRaw","props","e","stopClickPropagation","stopPropagation","onKeyDown","title","getValidationClass","readOnly","className","containerClick","containerRef","inputRef","placeholder","getDisabled","required","state","value","handleChange","handleBlur","handleFocus","type","renderDefaultValidation","label","renderLabel","BaseInput","Object","assign","defaultProps","Text"],"mappings":";;;;;;;AACA;;AAGA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAmBaA,O;;;;;AAGX,mBAAYC,KAAZ,EAAiC;AAAA;;AAAA;;AAC/B,iFAAMA,KAAN;;AAD+B,6FAoCR,UAACC,CAAD;AAAA,aAAyC,MAAKD,KAAL,CAAWE,oBAAX,IAAmCD,CAAC,CAACE,eAAF,EAA5E;AAAA,KApCQ;;AAAA,wFAsCb,UAACF,CAAD;AAAA,aAA8C,MAAKD,KAAL,CAAWI,SAAX,IAAwB,MAAKJ,KAAL,CAAWI,SAAX,CAAqBH,CAArB,CAAtE;AAAA,KAtCa;;AAAA;AAEhC;;;;6BAEe;AACd,aACE,oBAAC,mBAAD;AAAY,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWK;AAA9B,SACE;AACE,QAAA,SAAS,mCAA4B,KAAKC,kBAAL,EAA5B,oCACI,KAAKN,KAAL,CAAWO,QAAX,GAAsB,sBAAtB,GAA+C,EADnD,cAC2D,KAAKP,KAAL,CAAWQ,SAAX,GAAuB,KAAKR,KAAL,CAAWQ,SAAlC,GAA8C,EADzG,CADX;AAGE,QAAA,OAAO,EAAE,KAAKC,cAHhB;AAIE,QAAA,GAAG,EAAE,KAAKC;AAJZ,SAME;AACE,QAAA,GAAG,EAAE,KAAKC,QADZ;AAEE,QAAA,WAAW,EAAE,KAAKX,KAAL,CAAWY,WAF1B;AAGE,QAAA,QAAQ,EAAE,KAAKC,WAAL,EAHZ;AAIE,QAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWc,QAJvB;AAKE,QAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,KAAX,GAAmB,QAAnB,GAA8B,EAL3C;AAME,QAAA,QAAQ,EAAE,KAAKC,YANjB;AAOE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KAPpB;AAQE,QAAA,MAAM,EAAE,KAAKE,UARf;AASE,QAAA,OAAO,EAAE,KAAKC,WAThB;AAUE,QAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWO,QAVvB;AAWE,QAAA,SAAS,EAAE,KAAKH,SAXlB;AAYE,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWoB;AAZnB,QANF,EAoBE;AAAM,QAAA,SAAS,EAAC;AAAhB,QApBF,EAqBE;AAAM,QAAA,SAAS,EAAC;AAAhB,QArBF,EAsBG,KAAKC,uBAAL,EAtBH,EAuBG,KAAKrB,KAAL,CAAWsB,KAAX,IAAoB;AAAO,QAAA,SAAS,EAAG,KAAKtB,KAAL,CAAWO,QAAX,GAAsB,gBAAtB,GAAyC;AAA5D,SAAkE,KAAKgB,WAAL,EAAlE,CAvBvB,CADF,CADF;AA6BD;;;;EArC0BC,qB;;;;gBAAhBzB,O,kBACkB0B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,sBAAUG,YAA5B,EAA0C;AAAEP,EAAAA,IAAI,EAAE,MAAR;AAAgBR,EAAAA,WAAW,EAAE,EAA7B;AAAiCV,EAAAA,oBAAoB,EAAE,IAAvD;AAA6DK,EAAAA,QAAQ,EAAE;AAAvE,CAA1C,C;;AA2CxB,IAAMqB,IAAI,GAAG,sCAAyC7B,OAAzC,CAAb;;eAEQ6B,I","sourcesContent":["ï»¿// Libs\r\nimport * as React from 'react';\r\n\r\n// Misc\r\nimport InputGroup from '../inputGroup/InputGroup';\r\nimport { BaseInputProps, BaseInputState, BaseInput } from '../base/input/BaseInput';\r\nimport { withFormContext } from '../form/withFormContext';\r\nimport { OmitFormContext } from '../form/FormContext';\r\nimport { InnerRefProps } from './../../types/InnerRefProps';\r\n\r\nexport interface TextRawProps extends BaseInputProps<HTMLInputElement> {\r\n  mask?: string;\r\n  reverse?: boolean;\r\n  placeholder?: string;\r\n  stopClickPropagation?: boolean;\r\n  inputRef?: React.Ref<HTMLInputElement>;\r\n  readOnly?: boolean;\r\n  type?: 'number' | 'text';\r\n}\r\n\r\nexport type TextProps = OmitFormContext<TextRawProps> & InnerRefProps<TextRaw>;\r\n\r\nexport interface TextState extends BaseInputState {\r\n}\r\n\r\nexport class TextRaw extends BaseInput<TextRawProps, TextState, HTMLInputElement>  {\r\n  public static defaultProps = Object.assign({}, BaseInput.defaultProps, { type: 'text', placeholder: '', stopClickPropagation: true, readOnly: false });\r\n\r\n  constructor(props: TextRawProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <InputGroup title={this.props.title}>\r\n        <div\r\n          className={`input__base text-input ${this.getValidationClass()} \r\n                    ${(this.props.readOnly ? 'text-input--readOnly' : '')} ${(this.props.className ? this.props.className : '')}`}\r\n          onClick={this.containerClick}\r\n          ref={this.containerRef}\r\n        >\r\n          <input\r\n            ref={this.inputRef}\r\n            placeholder={this.props.placeholder}\r\n            disabled={this.getDisabled()}\r\n            required={this.props.required}\r\n            className={this.state.value ? 'filled' : ''}\r\n            onChange={this.handleChange}\r\n            value={this.state.value}\r\n            onBlur={this.handleBlur}\r\n            onFocus={this.handleFocus}\r\n            readOnly={this.props.readOnly}\r\n            onKeyDown={this.onKeyDown}\r\n            type={this.props.type}\r\n          />\r\n          <span className=\"highlight\" />\r\n          <span className=\"bar\" />\r\n          {this.renderDefaultValidation()}\r\n          {this.props.label && <label className={(this.props.readOnly ? 'label--focused' : '')}>{this.renderLabel()}</label>}\r\n        </div>\r\n      </InputGroup>\r\n    );\r\n  }\r\n\r\n  private containerClick = (e: React.MouseEvent<HTMLDivElement>) => this.props.stopClickPropagation && e.stopPropagation();\r\n\r\n  private onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => this.props.onKeyDown && this.props.onKeyDown(e);\r\n}\r\n\r\nexport const Text = withFormContext<TextRawProps, TextProps>(TextRaw);\r\n\r\nexport default Text;\r\n"],"file":"Text.js"}