{"version":3,"sources":["../../../src/lib/components/utils/ShallowEqual.ts"],"names":["hasOwnProperty","Object","prototype","is","x","y","shallowEqual","objA","objB","ignoreKey","keysA","keys","filter","k","keysB","length","i","call"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;AAWA;AAEA,IAAMA,cAAc,GAAGC,MAAM,CAACC,SAAP,CAAiBF,cAAxC;AAEA;;;;AAIA;;AACA,SAASG,EAAT,CAAYC,CAAZ,EAAoBC,CAApB,EAAqC;AACnC;AACA,MAAID,CAAC,KAAKC,CAAV,EAAa;AAAE;AACb;AACA;AACA,WAAOD,CAAC,KAAK,CAAN,IAAWC,CAAC,KAAK,CAAjB,IAAsB,IAAID,CAAJ,KAAU,IAAIC,CAA3C;AACD,GAJD,MAIO;AACL;AACA,WAAOD,CAAC,KAAKA,CAAN,IAAWC,CAAC,KAAKA,CAAxB;AACD;AACF;AAED;;;;;;;AAKO,SAASC,YAAT,CAAwCC,IAAxC,EAAiDC,IAAjD,EAA0DC,SAA1D,EAAwF;AAC7F,MAAIN,EAAE,CAACI,IAAD,EAAOC,IAAP,CAAN,EAAoB;AAClB,WAAO,IAAP;AACD;;AAED,MAAI,QAAOD,IAAP,MAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAArC,IACF,QAAOC,IAAP,MAAgB,QADd,IAC0BA,IAAI,KAAK,IADvC,EAC6C;AAC3C,WAAO,KAAP;AACD;;AAED,MAAME,KAAK,GAAGT,MAAM,CAACU,IAAP,CAAYJ,IAAZ,EAAkBK,MAAlB,CAAyB,UAAAC,CAAC;AAAA,WAAIA,CAAC,KAAKJ,SAAV;AAAA,GAA1B,CAAd;AACA,MAAMK,KAAK,GAAGb,MAAM,CAACU,IAAP,CAAYH,IAAZ,EAAkBI,MAAlB,CAAyB,UAAAC,CAAC;AAAA,WAAIA,CAAC,KAAKJ,SAAV;AAAA,GAA1B,CAAd;;AAEA,MAAIC,KAAK,CAACK,MAAN,KAAiBD,KAAK,CAACC,MAA3B,EAAmC;AACjC,WAAO,KAAP;AACD,GAf4F,CAiB7F;;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACK,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACrC,QACE,CAAChB,cAAc,CAACiB,IAAf,CAAoBT,IAApB,EAA0BE,KAAK,CAACM,CAAD,CAA/B,CAAD,IACA,CAACb,EAAE,CAACI,IAAI,CAACG,KAAK,CAACM,CAAD,CAAN,CAAL,EAAiBR,IAAI,CAACE,KAAK,CAACM,CAAD,CAAN,CAArB,CAFL,EAGE;AACA,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD","sourcesContent":["/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @providesModule shallowEqual\r\n * @typechecks\r\n * @flow\r\n */\r\n\r\n/*eslint-disable no-self-compare */\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n/**\r\n * inlined Object.is polyfill to avoid requiring consumers ship their own\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\r\n */\r\n// tslint:disable-next-line:no-any\r\nfunction is(x: any, y: any): boolean {\r\n  // SameValue algorithm\r\n  if (x === y) { // Steps 1-5, 7-10\r\n    // Steps 6.b-6.e: +0 != -0\r\n    // Added the nonzero y check to make Flow happy, but it is redundant\r\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\r\n  } else {\r\n    // Step 6.a: NaN == NaN\r\n    return x !== x && y !== y;\r\n  }\r\n}\r\n\r\n/**\r\n * Performs equality by iterating through keys on an object and returning false\r\n * when any key has values which are not strictly equal between the arguments.\r\n * Returns true when the values of all keys are strictly equal.\r\n */\r\nexport function shallowEqual<T extends object>(objA: T, objB: T, ignoreKey?: keyof T): boolean {\r\n  if (is(objA, objB)) {\r\n    return true;\r\n  }\r\n\r\n  if (typeof objA !== 'object' || objA === null ||\r\n    typeof objB !== 'object' || objB === null) {\r\n    return false;\r\n  }\r\n\r\n  const keysA = Object.keys(objA).filter(k => k !== ignoreKey);\r\n  const keysB = Object.keys(objB).filter(k => k !== ignoreKey);\r\n\r\n  if (keysA.length !== keysB.length) {\r\n    return false;\r\n  }\r\n\r\n  // Test for A's keys different from B.\r\n  for (let i = 0; i < keysA.length; i++) {\r\n    if (\r\n      !hasOwnProperty.call(objB, keysA[i]) ||\r\n      !is(objA[keysA[i]], objB[keysA[i]])\r\n    ) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}"],"file":"ShallowEqual.js"}