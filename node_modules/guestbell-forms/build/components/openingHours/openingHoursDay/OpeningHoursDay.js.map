{"version":3,"sources":["../../../../src/lib/components/openingHours/openingHoursDay/OpeningHoursDay.tsx"],"names":["PlusIcon","OpeningHoursDayRaw","props","newTime","Date","openingHours","times","length","getTime","getHours","setHours","onOpeningHoursChange","concat","index","filter","time","itemIndex","newOpeningHours","slice","title","className","tooltip","getValidationClass","containerRef","map","item","previousTime","nextTime","timeChanged","removeTimeClick","maxOpenCloseTimes","addTimeClick","renderDefaultValidation","label","renderLabel","getBottomBorder","parts","OpeningHoursUtil","getTimeFromMidnight","fullDayMilliseconds","start","end","diff","part","i","width","toFixed","hours","minutes","setMinutes","setSeconds","BaseInput","Object","assign","defaultProps","type","allowMultiple","OpeningHoursDay"],"mappings":"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","sourcesContent":["import * as PlusIcon from 'material-design-icons/content/svg/production/ic_add_circle_outline_24px.svg';\r\n\r\n// Libs\r\nimport * as React from 'react';\r\n\r\n// Misc\r\nimport { Time } from '../../time/Time';\r\nimport OpeningHoursUtil from '../utils/OpeningHoursUtil';\r\nimport InputGroup from '../../inputGroup/InputGroup';\r\nimport { BaseInputProps, BaseInputState, BaseInput } from '../../base/input/BaseInput';\r\nimport { Button } from '../../button/Button';\r\nimport { withFormContext } from '../../form/withFormContext';\r\nimport { OmitFormContext } from '../../form/FormContext';\r\nimport { InnerRefProps } from './../../../types/InnerRefProps';\r\n\r\nexport interface OpeningHoursDayObj {\r\n  times: Date[];\r\n}\r\n\r\nexport interface OpeningHoursDayRawProps extends BaseInputProps<never> {\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onOpeningHoursChange: (openingHours: OpeningHoursDayObj) => void;\r\n  openingHours: OpeningHoursDayObj;\r\n  label?: JSX.Element | string;\r\n  maxOpenCloseTimes?: number;\r\n}\r\n\r\nexport type OpeningHoursDayProps = OmitFormContext<OpeningHoursDayRawProps> & InnerRefProps<OpeningHoursDayRaw>;\r\n\r\nexport interface OpeningHoursState extends BaseInputState {\r\n}\r\n\r\nexport class OpeningHoursDayRaw extends BaseInput<OpeningHoursDayRawProps, OpeningHoursState, never>  {\r\n  public static defaultProps = Object.assign({}, BaseInput.defaultProps, { type: 'openingHours', allowMultiple: false, maxOpenCloseTimes: 10 });\r\n  private fullDayMilliseconds: number = 24 * 60 * 60 * 1000;\r\n\r\n  constructor(props: OpeningHoursDayRawProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <InputGroup\r\n        title={this.props.title}\r\n        className={'input__group__openingHoursDay ' + (this.props.className ? ' ' + this.props.className : '')}\r\n        tooltip={this.props.tooltip}\r\n      >\r\n        <div className={'input__base openingHoursDay-input ' + this.getValidationClass()} ref={this.containerRef}>\r\n          <div className=\"openingHoursDay-input__container\">\r\n            {this.props.openingHours && this.props.openingHours.times && this.props.openingHours.times.map((item, index) => {\r\n              const previousTime = index > 0 ? new Date(this.props.openingHours.times[index - 1]) : this.getTime(0, 0);\r\n              const nextTime = this.props.openingHours.times.length - 1 > index ?\r\n                new Date(this.props.openingHours.times[index + 1])\r\n                :\r\n                this.getTime(23, 59);\r\n              return <div className=\"openingHoursDay-input__time__container\" key={index}>\r\n                <span className=\"openingHoursDay-input__label\">{index % 2 === 0 ? 'Opens' : 'Closes'}</span>\r\n                <Time\r\n                  className={'openingHoursDay-input__time'}\r\n                  timeChange={this.timeChanged(index)}\r\n                  time={item}\r\n                  min={previousTime}\r\n                  max={nextTime}\r\n                />\r\n                <Button\r\n                  onClick={this.removeTimeClick(index)}\r\n                  className=\"openingHoursDay-input__button--remove mr-5 line-height--0\"\r\n                  circular={true}\r\n                  blank={true}\r\n                  type=\"error\"\r\n                >\r\n                  <PlusIcon />\r\n                </Button>\r\n              </div>;\r\n            })}\r\n            {this.props.maxOpenCloseTimes > this.props.openingHours.times.length &&\r\n              <Button\r\n                className=\"openingHoursDay-input__button-open-close\"\r\n                onClick={this.addTimeClick}\r\n                type={'primary'}\r\n                hero={true}\r\n              >\r\n                {this.props.openingHours && this.props.openingHours.times && this.props.openingHours.times.length % 2 === 0 ? 'Open' : 'Close'}\r\n              </Button>\r\n            }\r\n          </div>\r\n          {this.renderDefaultValidation()}\r\n          {this.props.openingHours && this.props.label && <span\r\n            className={'label-classname ' + (this.props.openingHours && this.props.openingHours.times\r\n              && this.props.openingHours.times.length ? 'label--focused' : 'label--focused label--closed')}\r\n          >{this.renderLabel(true)}\r\n          </span>}\r\n        </div>\r\n        {this.getBottomBorder()}\r\n      </InputGroup>\r\n    );\r\n  }\r\n\r\n  private addTimeClick = () => {\r\n    let newTime = new Date((this.props.openingHours && this.props.openingHours.times && this.props.openingHours.times.length ?\r\n      this.props.openingHours.times[this.props.openingHours.times.length - 1] : this.getTime(8, 0)));\r\n    if (newTime.getHours() < 23) {\r\n      newTime.setHours(newTime.getHours() + 1);\r\n    }\r\n    this.props.onOpeningHoursChange({\r\n      ...this.props.openingHours,\r\n      times: this.props.openingHours.times.concat([newTime])\r\n    });\r\n  }\r\n\r\n  private removeTimeClick = (index: number) => () => this.props.onOpeningHoursChange({\r\n    ...this.props.openingHours,\r\n    times: this.props.openingHours.times.filter((time, itemIndex) => itemIndex !== index)\r\n  })\r\n\r\n  private timeChanged = (index: number) => (time: Date) => {\r\n    let newOpeningHours: OpeningHoursDayObj = { ...this.props.openingHours, times: this.props.openingHours.times.slice(0) };\r\n    newOpeningHours.times[index] = time;\r\n    this.props.onOpeningHoursChange(newOpeningHours);\r\n  }\r\n\r\n  private getBottomBorder() {\r\n    let parts = [];\r\n    if (this.props.openingHours && this.props.openingHours.times && !this.props.openingHours.times.length) {\r\n      parts = parts.concat([1]);\r\n    } else {\r\n      parts = parts.concat([OpeningHoursUtil.getTimeFromMidnight(this.props.openingHours.times[0]) / this.fullDayMilliseconds]);\r\n      for (var index = 0; index < this.props.openingHours.times.length - 1; index++) {\r\n        let start = OpeningHoursUtil.getTimeFromMidnight(this.props.openingHours.times[index]);\r\n        let end = OpeningHoursUtil.getTimeFromMidnight(this.props.openingHours.times[index + 1]);\r\n        let diff = (end - start) / this.fullDayMilliseconds;\r\n        parts = parts.concat([diff]);\r\n      }\r\n      parts = parts.concat([(this.fullDayMilliseconds - OpeningHoursUtil.getTimeFromMidnight(this.props.openingHours.\r\n        times[this.props.openingHours.times.length - 1])) / this.fullDayMilliseconds]);\r\n    }\r\n    return (\r\n      <div className=\"openingHoursDay-input__bottom-border__container\">\r\n        {parts.map((part, i) => (\r\n          <div\r\n            key={i}\r\n            className={'openingHoursDay-input__bottom-border ' + (i % 2 === 0 ?\r\n              'openingHoursDay-input__bottom-border--closed'\r\n              :\r\n              'openingHoursDay-input__bottom-border--open')}\r\n            style={{ width: (part ? ((part * 100).toFixed(2) + '%') : '0') }}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private getTime(hours: number, minutes: number) {\r\n    let time = new Date();\r\n    time.setHours(hours);\r\n    time.setMinutes(minutes);\r\n    time.setSeconds(0);\r\n    return time;\r\n  }\r\n}\r\n\r\nexport const OpeningHoursDay = withFormContext<OpeningHoursDayRawProps, OpeningHoursDayProps>(OpeningHoursDayRaw);\r\n\r\nexport default OpeningHoursDay;\r\n"],"file":"OpeningHoursDay.js"}