{"version":3,"sources":["../../../../src/lib/components/openingHours/utils/OpeningHoursUtil.tsx"],"names":["OpeningHoursUtil","time","getTime","getTimezoneOffset","times","totalTime","newTimes","slice","map","item","getTimeFromMidnight","length","concat","index","nextTime","hours","Math","floor","minutes","hoursFormated","toFixed","minutesFormated","day","getTotalTimeString","util"],"mappings":";;;;;;;AACA;;;;;;;;;;IAGaA,gB;;;;;;;;;wCACgBC,I,EAAY;AACrC,aAAO,CAACA,IAAI,CAACC,OAAL,KAAiBD,IAAI,CAACE,iBAAL,KAA2B,KAA7C,IAAsD,QAA7D;AACD;;;uCAEyBC,K,EAAe;AAAA;;AACvC,UAAIC,SAAS,GAAG,CAAhB;AACA,UAAIC,QAAQ,GAAGF,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAeC,GAAf,CAAmB,UAAAC,IAAI;AAAA,eAAI,KAAI,CAACC,mBAAL,CAAyBD,IAAzB,CAAJ;AAAA,OAAvB,CAAf;;AACA,UAAIL,KAAK,CAACO,MAAN,GAAe,CAAf,KAAqB,CAAzB,EAA4B;AAC1BL,QAAAA,QAAQ,GAAGA,QAAQ,CAACM,MAAT,CAAgB,CAAC,WAAW,KAAK,IAAjB,CAAhB,CAAX;AACD;;AACD,WAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGP,QAAQ,CAACK,MAAT,GAAkB,CAA9C,EAAiDE,KAAK,EAAtD,EAA0D;AACxD,YAAIA,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB;AACnB,cAAIZ,IAAI,GAAGK,QAAQ,CAACO,KAAD,CAAnB;AACA,cAAIC,QAAQ,GAAGR,QAAQ,CAACO,KAAK,GAAG,CAAT,CAAvB;AACAR,UAAAA,SAAS,IAAIS,QAAQ,GAAGb,IAAxB;AACD;AACF;;AACD,UAAMc,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWZ,SAAS,GAAG,OAAvB,CAAd;AACA,UAAMa,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAWZ,SAAS,IAAI,KAAK,IAAT,CAApB,IAAsC,EAAtD;AACA,UAAMc,aAAa,GAAGJ,KAAK,GAAGA,KAAK,CAACK,OAAN,CAAc,CAAd,IAAmB,OAAnB,IAA8BL,KAAK,GAAG,CAAR,GAAY,GAAZ,GAAkB,EAAhD,CAAH,GAAyD,EAApF;AACA,UAAMM,eAAe,GAAGH,OAAO,GAAGA,OAAO,CAACE,OAAR,CAAgB,CAAhB,IAAqB,SAArB,IAAkCF,OAAO,GAAG,CAAV,GAAc,GAAd,GAAoB,EAAtD,CAAH,GAA+D,EAA9F;;AACA,UAAIC,aAAa,IAAIE,eAArB,EAAsC;AACpC,eAAO,2CAAYF,aAAZ,WAAgCE,eAAhC,CAAP;AACD;;AACD,UAAIF,aAAJ,EAAmB;AACjB,eAAO,2CAAYA,aAAZ,CAAP;AACD;;AACD,UAAIE,eAAJ,EAAqB;AACnB,eAAO,2CAAYA,eAAZ,CAAP;AACD;;AACD,aAAO,2CAAP;AACD;;;mCAEqBC,G,EAA6B;AACjD,aAAOA,GAAG,IAAIA,GAAG,CAAClB,KAAX,IAAoBkB,GAAG,CAAClB,KAAJ,CAAUO,MAAV,KAAqB,CAAzC,GACL,QADK,GAGL,KAAKY,kBAAL,CAAwBD,GAAG,CAAClB,KAA5B,CAHF;AAID;;;;;;;AAGH,IAAMoB,IAAI,GAAG,IAAIxB,gBAAJ,EAAb;eACewB,I","sourcesContent":["// Libs\r\nimport * as React from 'react';\r\nimport { OpeningHoursWeekDayObj } from '../openingHoursWeek/OpeningHoursWeek';\r\n\r\nexport class OpeningHoursUtil {\r\n  public getTimeFromMidnight(time: Date) {\r\n    return (time.getTime() - time.getTimezoneOffset() * 60000) % 86400000;\r\n  }\r\n\r\n  public getTotalTimeString(times: Date[]) {\r\n    let totalTime = 0;\r\n    let newTimes = times.slice(0).map(item => this.getTimeFromMidnight(item));\r\n    if (times.length % 2 === 1) {\r\n      newTimes = newTimes.concat([86400000 + 60 * 1000]);\r\n    }\r\n    for (let index = 0; index < newTimes.length - 1; index++) {\r\n      if (index % 2 === 0) {\r\n        let time = newTimes[index];\r\n        let nextTime = newTimes[index + 1];\r\n        totalTime += nextTime - time;\r\n      }\r\n    }\r\n    const hours = Math.floor(totalTime / 3600000);\r\n    const minutes = Math.floor(totalTime / (60 * 1000)) % 60;\r\n    const hoursFormated = hours ? hours.toFixed(0) + ' hour' + (hours > 1 ? 's' : '') : '';\r\n    const minutesFormated = minutes ? minutes.toFixed(0) + ' minute' + (minutes > 1 ? 's' : '') : '';\r\n    if (hoursFormated && minutesFormated) {\r\n      return <span>Open {hoursFormated} and {minutesFormated}</span>;\r\n    }\r\n    if (hoursFormated) {\r\n      return <span>Open {hoursFormated}</span>;\r\n    }\r\n    if (minutesFormated) {\r\n      return <span>Open {minutesFormated}</span>;\r\n    }\r\n    return <span>Closed</span>;\r\n  }\r\n\r\n  public getLabelSuffix(day: OpeningHoursWeekDayObj) {\r\n    return day && day.times && day.times.length === 0 ?\r\n      'Closed'\r\n      :\r\n      this.getTotalTimeString(day.times);\r\n  }\r\n}\r\n\r\nconst util = new OpeningHoursUtil();\r\nexport default util;"],"file":"OpeningHoursUtil.js"}