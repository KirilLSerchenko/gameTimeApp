{"version":3,"sources":["../../../../src/lib/components/openingHours/openingHoursSpecial/OpeningHoursSpecial.tsx"],"names":["PlusIcon","DateIcon","Moment","require","undefined","DatePicker","default","DAY_FORMAT","DateInput","props","onClick","display","marginRight","children","value","React","PureComponent","OpeningHoursSpecialRaw","index","onDaysChange","days","filter","d","indexInner","day","date","slice","toDate","openingHours","Error","getValidationClass","className","containerRef","map","OpeningHoursUtil","getLabelSuffix","removeDayClick","times","openingHoursChanged","placeholder","dateChanged","renderDefaultValidation","BaseInput","Object","assign","defaultProps","type","OpeningHoursSpecial"],"mappings":"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","sourcesContent":["import * as PlusIcon from 'material-design-icons/content/svg/production/ic_add_circle_outline_24px.svg';\r\nimport * as DateIcon from 'material-design-icons/action/svg/production/ic_event_24px.svg';\r\n\r\n// Libs\r\nimport * as React from 'react';\r\ntry {\r\n  var Moment = require('moment');\r\n} catch {\r\n  Moment = undefined;\r\n}\r\ntry {\r\n  var DatePicker = require('react-datepicker').default;\r\n} catch {\r\n  DatePicker = undefined;\r\n}\r\n\r\n// Misc\r\nimport OpeningHoursUtil from '../utils/OpeningHoursUtil';\r\nimport { OpeningHoursDayObj, OpeningHoursDay } from '../openingHoursDay/OpeningHoursDay';\r\nimport { BaseInputProps, BaseInputState, BaseInput } from '../../base/input/BaseInput';\r\nimport { Button } from '../../button/Button';\r\nimport { OmitFormContext } from '../../form/FormContext';\r\nimport { withFormContext } from '../../form/withFormContext';\r\nimport { InnerRefProps } from './../../../types/InnerRefProps';\r\n\r\nexport interface OpeningHoursSpecialDayObj extends OpeningHoursDayObj {\r\n  date?: Date;\r\n}\r\n\r\nexport interface OpeningHoursSpecialRawProps extends BaseInputProps<never> {\r\n  days: OpeningHoursSpecialDayObj[];\r\n  onDaysChange: (days: OpeningHoursSpecialDayObj[]) => void;\r\n  placeholder?: string;\r\n}\r\n\r\nexport type OpeningHoursSpecialProps = OmitFormContext<OpeningHoursSpecialRawProps> & InnerRefProps<OpeningHoursSpecialRaw>;\r\n\r\nexport interface OpeningHoursSpecialState extends BaseInputState {\r\n}\r\n\r\nconst DAY_FORMAT = 'D/M/YYYY';\r\n\r\nexport class DateInput extends React.PureComponent<{ value?: string, onClick?: () => void }> {\r\n  public render() {\r\n    return (\r\n      <Button\r\n        blank={true}\r\n        type=\"primary\"\r\n        onClick={this.props.onClick}\r\n      >\r\n        <div style={{ display: 'flex' }}>\r\n          <DateIcon style={{ marginRight: 4 }} />\r\n          {this.props.children ? this.props.children : this.props.value}\r\n        </div>\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport class OpeningHoursSpecialRaw extends BaseInput<OpeningHoursSpecialRawProps, OpeningHoursSpecialState, never> {\r\n  public static defaultProps = Object.assign({}, BaseInput.defaultProps, { type: 'openingHoursSpecial', placeholder: DAY_FORMAT });\r\n\r\n  constructor(props: OpeningHoursSpecialRawProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    if (!DatePicker) {\r\n      throw new Error('You need to install react-datepicker in order to use special day picker');\r\n    }\r\n    if (!Moment) {\r\n      throw new Error('You need to install moment in order to use special day picker');\r\n    }\r\n    return (\r\n      <div\r\n        className={'input__base openingHoursSpecial-input ' + this.getValidationClass() + ' ' + (this.props.className ? this.props.className : '')}\r\n        ref={this.containerRef}\r\n      >\r\n        {this.props.days.map((day, index) => (\r\n          <OpeningHoursDay\r\n            key={index}\r\n            label={(\r\n              <span>\r\n                {OpeningHoursUtil.getLabelSuffix(day)}\r\n                <span className=\"float-right\">\r\n                  <Button\r\n                    blank={true}\r\n                    className=\"openingHoursSpecial-input__button openingHoursSpecial-input__button--remove\"\r\n                    onClick={this.removeDayClick(index)}\r\n                  >\r\n                    <PlusIcon />\r\n                  </Button>\r\n                </span>\r\n              </span>\r\n            )}\r\n            openingHours={{\r\n              times: day.times\r\n            }}\r\n            onOpeningHoursChange={this.openingHoursChanged(index, day)}\r\n            title={<DatePicker\r\n              customInput={<DateInput>{!day.date && 'Choose date'}</DateInput>}\r\n              placeholder={this.props.placeholder}\r\n              selected={day.date && Moment(day.date)}\r\n              dateFormat={DAY_FORMAT}\r\n              onChange={this.dateChanged(index, day)}\r\n              excludeDates={this.props.days.filter(d => d.date).map(d => Moment(d.date))}\r\n              withPortal={true}\r\n              minDate={Moment()}\r\n            />}\r\n          />\r\n        ))}\r\n        <span className=\"bar\" />\r\n        {this.renderDefaultValidation()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private removeDayClick = (index: number) => () => this.props.onDaysChange(this.props.days.filter((d, indexInner) => indexInner !== index));\r\n\r\n  private dateChanged = (index: number, day: OpeningHoursDayObj) => (date) => {\r\n    let days = this.props.days.slice(0);\r\n    days[index] = { ...day, date: date.toDate() };\r\n    this.props.onDaysChange(days);\r\n  }\r\n\r\n  private openingHoursChanged = (index: number, day: OpeningHoursDayObj) => (openingHours) => {\r\n    let days = this.props.days.slice(0);\r\n    days[index] = { ...day, ...openingHours };\r\n    this.props.onDaysChange(days);\r\n  }\r\n}\r\n\r\nexport const OpeningHoursSpecial = withFormContext<OpeningHoursSpecialRawProps, OpeningHoursSpecialProps>(OpeningHoursSpecialRaw);\r\n\r\nexport default OpeningHoursSpecial;\r\n"],"file":"OpeningHoursSpecial.js"}