{"version":3,"sources":["../../../../src/lib/components/openingHours/openingHoursWeek/OpeningHoursWeek.tsx"],"names":["OpeningHoursWeekRaw","props","index","day","openingHours","days","slice","isStandardDay","onDaysChange","checked","target","onStandardDayChange","state","length","dayLabel","times","newProps","getValidationClass","className","containerRef","renderContent","standardDay","OpeningHoursUtil","getLabelSuffix","standardDayChanged","map","isStandardDayChecked","onOpeningHoursChange","renderDefaultValidation","BaseInput","Object","assign","defaultProps","type","placeholder","collapsable","OpeningHoursWeek"],"mappings":"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","sourcesContent":["// Libs\r\nimport * as React from 'react';\r\n\r\n// Misc\r\nimport OpeningHoursUtil from '../utils/OpeningHoursUtil';\r\nimport { OpeningHoursDayObj, OpeningHoursDay } from '../openingHoursDay/OpeningHoursDay';\r\nimport { BaseInputProps, BaseInputState, BaseInput } from '../../base/input/BaseInput';\r\nimport { Checkbox } from '../../checkbox/Checkbox';\r\nimport { OmitFormContext } from '../../form/FormContext';\r\nimport { withFormContext } from '../../form/withFormContext';\r\nimport { InnerRefProps } from './../../../types/InnerRefProps';\r\n\r\nexport interface OpeningHoursWeekDayObj extends OpeningHoursDayObj {\r\n  isStandardDay?: boolean;\r\n  dayLabel?: string;\r\n}\r\n\r\nexport interface OpeningHoursWeekRawProps extends BaseInputProps<never> {\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  days: OpeningHoursWeekDayObj[];\r\n  onDaysChange: (days: OpeningHoursWeekDayObj[]) => void;\r\n  standardDay?: OpeningHoursWeekDayObj;\r\n  onStandardDayChange?: (day: OpeningHoursWeekDayObj) => void;\r\n}\r\n\r\nexport type OpeningHoursWeekProps = OmitFormContext<OpeningHoursWeekRawProps> & InnerRefProps<OpeningHoursWeekRaw>;\r\n\r\nexport interface OpeningHoursWeekState extends BaseInputState {\r\n}\r\n\r\nexport class OpeningHoursWeekRaw extends BaseInput<OpeningHoursWeekRawProps, OpeningHoursWeekState, never>  {\r\n  public static defaultProps = Object.assign({}, BaseInput.defaultProps, {\r\n    type: 'openingHoursWeek',\r\n    placeholder: '',\r\n    collapsable: false\r\n  });\r\n\r\n  constructor(props: OpeningHoursWeekRawProps) {\r\n    super(props);\r\n    this.state = { ...this.state };\r\n  }\r\n\r\n  public componentWillMount() {\r\n    if (!this.props.days || !this.props.days.length) {\r\n      this.props.onDaysChange([\r\n        { dayLabel: 'Monday', times: [] },\r\n        { dayLabel: 'Tuesday', times: [] },\r\n        { dayLabel: 'Wednesday', times: [] },\r\n        { dayLabel: 'Thursday', times: [] },\r\n        { dayLabel: 'Friday', times: [] },\r\n        { dayLabel: 'Saturday', times: [] },\r\n        { dayLabel: 'Sunday', times: [] },\r\n      ]);\r\n    }\r\n  }\r\n\r\n  public componentWillReceiveProps(newProps: OpeningHoursWeekProps) {\r\n    if (!newProps.days || !newProps.days.length) {\r\n      newProps.onDaysChange([\r\n        { dayLabel: 'Monday', times: [] },\r\n        { dayLabel: 'Tuesday', times: [] },\r\n        { dayLabel: 'Wednesday', times: [] },\r\n        { dayLabel: 'Thursday', times: [] },\r\n        { dayLabel: 'Friday', times: [] },\r\n        { dayLabel: 'Saturday', times: [] },\r\n        { dayLabel: 'Sunday', times: [] },\r\n      ]);\r\n    }\r\n  }\r\n\r\n  public render() {\r\n\r\n    return (\r\n      <div\r\n        className={'openingHoursWeek-input ' + this.getValidationClass() + ' ' + (this.props.className ? this.props.className : '')}\r\n        ref={this.containerRef}\r\n      >\r\n        {this.renderContent()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderContent() {\r\n    return (\r\n      <div className={``}>\r\n        {this.props.standardDay && <OpeningHoursDay\r\n          className=\"openingHoursWeek__standard-day\"\r\n          label={<span>\r\n            {OpeningHoursUtil.getLabelSuffix(this.props.standardDay)}\r\n          </span>}\r\n          openingHours={{\r\n            times: this.props.standardDay.times\r\n          }}\r\n          onOpeningHoursChange={this.standardDayChanged}\r\n          title={'Standard day'}\r\n          tooltip={(\r\n            <p>\r\n              We recommend to use <b>Standard day</b> if multiple days share the same opening hours.\r\n              Check \"Standard day?\" checkbox for each of these days to make them share standard opening hours.\r\n                    </p>\r\n          )}\r\n        />}\r\n        {this.props.days.map((day, index) => (\r\n          <OpeningHoursDay\r\n            className={''}\r\n            key={index}\r\n            label={this.props.standardDay ? <span>\r\n              {OpeningHoursUtil.getLabelSuffix(this.props.standardDay && day.isStandardDay ? this.props.standardDay : day)}\r\n              <span className=\"float-right\">\r\n                Standard day?\r\n                                <Checkbox\r\n                  className=\"label__checkbox\"\r\n                  checked={day.isStandardDay}\r\n                  onChecked={this.isStandardDayChecked(index, day)}\r\n                />\r\n              </span>\r\n            </span> : day.dayLabel}\r\n            openingHours={{\r\n              times: this.props.standardDay && day.isStandardDay ? this.props.standardDay.times : day.times\r\n            }}\r\n            onOpeningHoursChange={this.onOpeningHoursChange(index, day)}\r\n            title={day.dayLabel}\r\n          />\r\n        ))}\r\n        <span className=\"bar\" />\r\n        {this.renderDefaultValidation()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private onOpeningHoursChange = (index: number, day: OpeningHoursDayObj) => (openingHours: OpeningHoursWeekDayObj) => {\r\n    let days = this.props.days.slice(0);\r\n    days[index] = { ...day, ...openingHours, isStandardDay: false };\r\n    this.props.onDaysChange(days);\r\n  }\r\n\r\n  private isStandardDayChecked = (index: number, day: OpeningHoursWeekDayObj) => (checked) => {\r\n    let days = this.props.days.slice(0);\r\n    days[index] = { ...day, isStandardDay: checked.target.checked };\r\n    this.props.onDaysChange(days);\r\n  }\r\n\r\n  private standardDayChanged = (openingHours: OpeningHoursDayObj) => {\r\n    this.props.onStandardDayChange(openingHours);\r\n  }\r\n}\r\n\r\nexport const OpeningHoursWeek = withFormContext<OpeningHoursWeekRawProps, OpeningHoursWeekProps>(OpeningHoursWeekRaw);\r\n\r\nexport default OpeningHoursWeek;\r\n"],"file":"OpeningHoursWeek.js"}