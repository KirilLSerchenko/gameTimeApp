{"version":3,"sources":["../../../src/lib/components/textArea/TextArea.tsx"],"names":["TextAreaRaw","props","e","onKeyDown","elem","inputRef","stopClickPropagation","stopPropagation","title","getValidationClass","readOnly","className","onContainerClick","containerRef","elemRef","placeholder","getDisabled","required","state","value","handleChange","handleBlur","handleFocus","minRows","maxRows","el","textArea","renderDefaultValidation","label","renderLabel","focus","BaseInput","Object","assign","defaultProps","type","TextArea"],"mappings":";;;;;;;AACA;;AACA;;AAGA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAqBaA,W;;;;;AAUX,uBAAYC,KAAZ,EAAqC;AAAA;;AAAA;;AACnC,qFAAMA,KAAN;;AADmC;;AAAA,wFA2CjB,UAAAC,CAAC;AAAA,aAAI,MAAKD,KAAL,CAAWE,SAAX,IAAwB,MAAKF,KAAL,CAAWE,SAAX,CAAqBD,CAArB,CAA5B;AAAA,KA3CgB;;AAAA,sFA6CnB,UAAAE,IAAI;AAAA,aAAI,MAAKH,KAAL,CAAWI,QAAX,IAAuB,MAAKJ,KAAL,CAAWI,QAAX,CAAoBD,IAApB,CAA3B;AAAA,KA7Ce;;AAAA,+FA+CV,UAAAF,CAAC;AAAA,aAAI,MAAKD,KAAL,CAAWK,oBAAX,IAAmCJ,CAAC,CAACK,eAAF,EAAvC;AAAA,KA/CS;;AAAA;AAEpC;;;;6BAEe;AAAA;;AACd,aACE,oBAAC,mBAAD;AAAY,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO;AAA9B,SACE;AACE,QAAA,SAAS,uCAAgC,KAAKC,kBAAL,EAAhC,oCACI,KAAKR,KAAL,CAAWS,QAAX,GAAsB,0BAAtB,GAAmD,EADvD,oCAEG,KAAKT,KAAL,CAAWU,SAAX,GAAuB,KAAKV,KAAL,CAAWU,SAAlC,GAA8C,EAFjD,CADX;AAIE,QAAA,OAAO,EAAE,KAAKC,gBAJhB;AAKE,QAAA,GAAG,EAAE,KAAKC;AALZ,SAOE,oBAAC,8BAAD;AACE,QAAA,GAAG,EAAE,KAAKC,OADZ;AAEE,QAAA,WAAW,EAAE,KAAKb,KAAL,CAAWc,WAF1B;AAGE,QAAA,QAAQ,EAAE,KAAKC,WAAL,EAHZ;AAIE,QAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWgB,QAJvB;AAKE,QAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,KAAX,GAAmB,QAAnB,GAA8B,EAL3C;AAME,QAAA,QAAQ,EAAE,KAAKC,YANjB;AAOE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KAPpB;AAQE,QAAA,MAAM,EAAE,KAAKE,UARf;AASE,QAAA,OAAO,EAAE,KAAKC,WAThB;AAUE,QAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWS,QAVvB;AAWE,QAAA,SAAS,EAAE,KAAKP,SAXlB;AAYE,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWsB,OAZnB;AAaE,QAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWuB,OAbtB;AAcE,QAAA,QAAQ,EAAE,kBAAAC,EAAE;AAAA,iBAAI,MAAI,CAACC,QAAL,GAAgBD,EAApB;AAAA;AAdd,QAPF,EAuBE;AAAM,QAAA,SAAS,EAAC;AAAhB,QAvBF,EAwBE;AAAM,QAAA,SAAS,EAAC;AAAhB,QAxBF,EAyBG,KAAKE,uBAAL,EAzBH,EA0BG,KAAK1B,KAAL,CAAW2B,KAAX,IAAoB,mCAAQ,KAAKC,WAAL,EAAR,CA1BvB,CADF,CADF;AAgCD;;;4BAEc;AACb,WAAKH,QAAL,IAAiB,KAAKA,QAAL,CAAcI,KAAd,EAAjB;AACD;;;;EAnD8BC,qB;;;;gBAApB/B,W,kBACkBgC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,sBAAUG,YAA5B,EAA0C;AACrEC,EAAAA,IAAI,EAAE,MAD+D;AAErEpB,EAAAA,WAAW,EAAE,EAFwD;AAGrET,EAAAA,oBAAoB,EAAE,IAH+C;AAIrEI,EAAAA,QAAQ,EAAE;AAJ2D,CAA1C,C;;AA2DxB,IAAM0B,QAAQ,GAAG,sCAAiDpC,WAAjD,CAAjB;;eAEQoC,Q","sourcesContent":["ï»¿// Libs\r\nimport * as React from 'react';\r\nimport Textarea from 'react-autosize-textarea';\r\n\r\n// Misc\r\nimport InputGroup from '../inputGroup/InputGroup';\r\nimport { BaseInputProps, BaseInputState, BaseInput } from '../base/input/BaseInput';\r\nimport { withFormContext } from '../form/withFormContext';\r\nimport { OmitFormContext } from '../form/FormContext';\r\nimport InnerRefProps from '../../types/InnerRefProps';\r\n\r\nexport interface TextAreaRawProps extends BaseInputProps<HTMLTextAreaElement> {\r\n  mask?: string;\r\n  reverse?: boolean;\r\n  placeholder?: string;\r\n  stopClickPropagation?: boolean;\r\n  inputRef?: (input: HTMLTextAreaElement) => void;\r\n  readOnly?: boolean;\r\n  type?: 'number' | 'text';\r\n  minRows?: number;\r\n  maxRows?: number;\r\n}\r\n\r\nexport type TextAreaProps = OmitFormContext<TextAreaRawProps> & InnerRefProps<TextAreaRaw>;\r\n\r\nexport interface TextAreaState extends BaseInputState {\r\n}\r\n\r\nexport class TextAreaRaw extends BaseInput<TextAreaRawProps, TextAreaState, HTMLTextAreaElement>  {\r\n  public static defaultProps = Object.assign({}, BaseInput.defaultProps, {\r\n    type: 'text',\r\n    placeholder: '',\r\n    stopClickPropagation: true,\r\n    readOnly: false,\r\n  });\r\n\r\n  private textArea: HTMLTextAreaElement;\r\n\r\n  constructor(props: TextAreaRawProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <InputGroup title={this.props.title}>\r\n        <div\r\n          className={`input__base textArea-input ${this.getValidationClass()} \r\n                    ${(this.props.readOnly ? 'textArea-input--readOnly' : '')} \r\n                    ${this.props.className ? this.props.className : ''}`}\r\n          onClick={this.onContainerClick}\r\n          ref={this.containerRef}\r\n        >\r\n          <Textarea\r\n            ref={this.elemRef}\r\n            placeholder={this.props.placeholder}\r\n            disabled={this.getDisabled()}\r\n            required={this.props.required}\r\n            className={this.state.value ? 'filled' : ''}\r\n            onChange={this.handleChange}\r\n            value={this.state.value}\r\n            onBlur={this.handleBlur}\r\n            onFocus={this.handleFocus}\r\n            readOnly={this.props.readOnly}\r\n            onKeyDown={this.onKeyDown}\r\n            rows={this.props.minRows}\r\n            maxRows={this.props.maxRows}\r\n            innerRef={el => this.textArea = el}\r\n          />\r\n          <span className=\"highlight\" />\r\n          <span className=\"bar\" />\r\n          {this.renderDefaultValidation()}\r\n          {this.props.label && <label>{this.renderLabel()}</label>}\r\n        </div>\r\n      </InputGroup>\r\n    );\r\n  }\r\n\r\n  public focus() {\r\n    this.textArea && this.textArea.focus();\r\n  }\r\n\r\n  private onKeyDown = e => this.props.onKeyDown && this.props.onKeyDown(e);\r\n\r\n  private elemRef = elem => this.props.inputRef && this.props.inputRef(elem);\r\n\r\n  private onContainerClick = e => this.props.stopClickPropagation && e.stopPropagation();\r\n}\r\n\r\nexport const TextArea = withFormContext<TextAreaRawProps, TextAreaProps>(TextAreaRaw);\r\n\r\nexport default TextArea;\r\n"],"file":"TextArea.js"}