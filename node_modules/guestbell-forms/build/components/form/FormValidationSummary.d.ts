import * as React from 'react';
import { FormContextProps, OmitFormContext, FormComponentContextState } from './FormContext';
import { FormValidationSummaryComponentProps } from './FormValidationSummary';
export interface FormValidationSummaryComponentProps {
    componentsWithErrors: FormComponentContextState[];
}
export declare type FormValidationSummaryRawProps = {
    containerClassName?: string;
    headerClassName?: string;
    footerClassName?: string;
    title?: string | JSX.Element;
    footer?: string | JSX.Element;
    Component?: React.ComponentType<FormValidationSummaryComponentProps> | React.StatelessComponent<FormValidationSummaryComponentProps>;
} & FormContextProps;
export declare type FormValidationSummaryProps = OmitFormContext<FormValidationSummaryRawProps>;
export interface FormValidationSummaryState {
}
export declare const DefaultComponent: React.SFC<FormValidationSummaryComponentProps>;
export declare class FormValidationSummaryRaw extends React.PureComponent<FormValidationSummaryRawProps, FormValidationSummaryState> {
    static defaultProps: {
        title: string;
        footer: string;
        Component: React.StatelessComponent<FormValidationSummaryComponentProps>;
        containerClassName: string;
        headerClassName: string;
        footerClassName: string;
    };
    componentId: string;
    render(): JSX.Element;
}
export declare const FormValidationSummary: React.StatelessComponent<Pick<FormValidationSummaryRawProps, "Component" | "title" | "footer" | "headerClassName" | "containerClassName" | "footerClassName">>;
