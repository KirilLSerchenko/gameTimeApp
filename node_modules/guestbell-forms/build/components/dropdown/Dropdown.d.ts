import * as React from 'react';
export interface DropdownItemProps {
    header?: JSX.Element | string;
    className?: string;
    submenuClassName?: string;
    headerClassName?: string;
    notificationCount?: number;
    wrapperTag?: Exclude<keyof HTMLElementTagNameMap, 'applet' | 'basefont' | 'dir' | 'font' | 'frame' | 'frameset' | 'marquee' | 'slot' | 'template' | 'acronym' | 'center' | 'acronym' | 'isindex' | 'listing' | 'nextid' | 'nobr' | 'plaintext' | 'noframes' | 'strike' | 'tt' | 'xmp'>;
    shouldHandleClick?: boolean;
    showArrow?: boolean;
    onClick?: () => void;
    disabled?: boolean;
    inline?: boolean;
}
export interface DropdownItemState {
    isDropdownVisible: boolean;
}
export declare class Dropdown extends React.PureComponent<DropdownItemProps, DropdownItemState> {
    static defaultProps: DropdownItemProps;
    constructor(props: DropdownItemProps);
    handleClickOutside(): void;
    hideNavigation(): void;
    showNavigation(): void;
    componentDidMount(): void;
    componentWillUnmount(): void;
    render(): JSX.Element;
    private containerClick;
    private handleClick;
    private renderChildren;
}
export default Dropdown;
