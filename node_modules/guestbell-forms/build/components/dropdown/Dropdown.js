"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Dropdown = void 0;

var React = _interopRequireWildcard(require("react"));

var _SmoothCollapse = _interopRequireDefault(require("../smoothCollapse/SmoothCollapse"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var classNames = require('classnames');

var Dropdown =
/*#__PURE__*/
function (_React$PureComponent) {
  _inherits(Dropdown, _React$PureComponent);

  function Dropdown(props) {
    var _this;

    _classCallCheck(this, Dropdown);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dropdown).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "containerClick", function (e) {
      _this.handleClick(e);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleClick", function (e) {
      if (_this.props.shouldHandleClick && !_this.props.disabled) {
        _this.props.onClick && _this.props.onClick();
        e.preventDefault();
        e.stopPropagation();

        if (!_this.state.isDropdownVisible) {
          _this.showNavigation();
        }
      }
    });

    _this.state = {
      isDropdownVisible: false
    };
    _this.showNavigation = _this.showNavigation.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this.hideNavigation = _this.hideNavigation.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }

  _createClass(Dropdown, [{
    key: "handleClickOutside",
    value: function handleClickOutside() {
      this.setState({
        isDropdownVisible: false
      });
    }
  }, {
    key: "hideNavigation",
    value: function hideNavigation() {
      this.setState({
        isDropdownVisible: false
      });
      document.removeEventListener('click', this.hideNavigation);
    }
  }, {
    key: "showNavigation",
    value: function showNavigation() {
      this.setState({
        isDropdownVisible: true
      });
      document.addEventListener('click', this.hideNavigation);
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.hideNavigation = this.hideNavigation.bind(this);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      document.removeEventListener('click', this.hideNavigation);
    }
  }, {
    key: "render",
    value: function render() {
      var containerClassName = classNames(['guestbell__dropdown', !this.state.isDropdownVisible ? 'guestbell__dropdown--closed' : 'guestbell__dropdown--opened', _defineProperty({}, 'guestbell__dropdown--disabled', this.props.disabled), _defineProperty({}, 'guestbell__dropdown--inline', this.props.inline), this.props.className]);
      var headerClassName = classNames(['guestbell__dropdown-toggle', _defineProperty({}, 'guestbell__dropdown-toggle__arrow--hidden', !this.props.showArrow), _defineProperty({}, 'guestbell__dropdown-toggle--disabled', this.props.disabled), this.props.headerClassName]);
      return React.createElement(this.props.wrapperTag, {
        className: containerClassName
      }, React.createElement("div", {
        role: "button",
        className: headerClassName,
        onClick: this.containerClick
      }, this.props.header, this.props.notificationCount > 0 && React.createElement("span", {
        className: "guestbell__label-count"
      }, this.props.notificationCount)), React.createElement("div", {
        className: 'guestbell__dropdown-menu__container'
      }, React.createElement(_SmoothCollapse.default, {
        expanded: this.state.isDropdownVisible
      }, this.renderChildren())));
    }
  }, {
    key: "renderChildren",
    value: function renderChildren() {
      return React.createElement("ul", {
        className: 'guestbell__dropdown-menu ' + (this.props.submenuClassName ? this.props.submenuClassName : '')
      }, this.props.children);
    }
  }]);

  return Dropdown;
}(React.PureComponent);

exports.Dropdown = Dropdown;

_defineProperty(Dropdown, "defaultProps", {
  shouldHandleClick: true,
  wrapperTag: 'div',
  notificationCount: 0,
  showArrow: true,
  inline: true
});

var _default = Dropdown;
exports.default = _default;
//# sourceMappingURL=Dropdown.js.map