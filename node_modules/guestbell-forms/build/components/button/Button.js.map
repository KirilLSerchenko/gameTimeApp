{"version":3,"sources":["../../../src/lib/components/button/Button.tsx"],"names":["Ink","require","classNames","DefaultButtonComponent","props","buttonProps","className","onClick","children","Button","handleClick","bind","btnClassName","getButtonClassName","disabled","circular","small","noShadow","blank","outlined","dropdown","icon","hero","button","noRipples","tooltip","tooltipProps","e","preventDefault","preventMultipleClick","disableAfterClickMs","setTimeout","type","React","PureComponent","Component"],"mappings":"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","sourcesContent":["// Libs\r\nimport * as React from 'react';\r\nimport { Tooltip } from 'react-tippy';\r\nvar Ink = require('react-ink');\r\nvar classNames = require('classnames');\r\n\r\n// Misc\r\n\r\nexport type ButtonTypes = 'primary' | 'success' | 'error' | 'warning' | 'info' | 'gray' | 'white' | 'none';\r\n\r\nexport type ButtonComponentProps = {\r\n  onClick: (e: React.MouseEvent<HTMLElement>) => void;\r\n  className: string;\r\n  buttonProps: React.ButtonHTMLAttributes<HTMLButtonElement>;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport type ButtonProps = {\r\n  onClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n  style?: React.StyleHTMLAttributes<HTMLButtonElement>;\r\n  className?: string;\r\n  disabled?: boolean;\r\n  type?: ButtonTypes;\r\n  circular?: boolean;\r\n  noRipples?: boolean;\r\n  small?: boolean;\r\n  icon?: boolean;\r\n  outlined?: boolean;\r\n  disableAfterClickMs?: number;\r\n  buttonProps?: React.ButtonHTMLAttributes<HTMLButtonElement>;\r\n  hero?: boolean;\r\n  noShadow?: boolean;\r\n  blank?: boolean;\r\n  dropdown?: boolean;\r\n  Component?: (props: ButtonComponentProps) => JSX.Element;\r\n  tooltip?: JSX.Element | string;\r\n  // tslint:disable-next-line:no-any\r\n  tooltipProps?: any;\r\n};\r\n\r\nexport interface ButtonState {\r\n}\r\n\r\nconst DefaultButtonComponent: React.SFC<ButtonComponentProps> = props => (\r\n  <button\r\n    // tslint:disable-next-line:no-any\r\n    {...(props.buttonProps ? props.buttonProps : {}) as any}\r\n    role=\"button\"\r\n    className={props.className}\r\n    onClick={props.onClick}\r\n  >\r\n    {props.children}\r\n  </button>\r\n);\r\n\r\nexport class Button extends React.PureComponent<ButtonProps, ButtonState>  {\r\n  public static defaultProps: ButtonProps = {\r\n    disabled: false,\r\n    className: '',\r\n    onClick: () => null,\r\n    circular: false,\r\n    noRipples: false,\r\n    small: false,\r\n    disableAfterClickMs: 500,\r\n    Component: DefaultButtonComponent,\r\n    buttonProps: {\r\n      type: 'button'\r\n    },\r\n    type: 'none'\r\n  };\r\n\r\n  private preventMultipleClick = false;\r\n\r\n  constructor(props: ButtonProps) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  public render() {\r\n    let btnClassName = classNames([\r\n      'guestbell-btn',\r\n      this.getButtonClassName(),\r\n      this.props.className,\r\n      { ['guestbell-btn--disabled']: this.props.disabled },\r\n      { ['guestbell-btn--circular']: this.props.circular },\r\n      { ['guestbell-btn--small']: this.props.small },\r\n      { ['guestbell-btn--no-shadow']: this.props.noShadow },\r\n      { ['guestbell-btn--blank']: this.props.blank },\r\n      { ['guestbell-btn--outlined']: this.props.outlined },\r\n      { ['guestbell-btn--dropdown']: this.props.dropdown },\r\n      { ['guestbell-btn--icon']: this.props.icon },\r\n      { ['guestbell-btn--hero']: this.props.hero },\r\n    ]);\r\n    const button = (\r\n      <this.props.Component\r\n        onClick={this.handleClick}\r\n        buttonProps={this.props.buttonProps}\r\n        className={btnClassName}\r\n      >\r\n        {!this.props.noRipples && !this.props.disabled && Ink && <Ink />}\r\n        {this.props.children}\r\n      </this.props.Component>\r\n    );\r\n    if (this.props.tooltip) {\r\n      return (\r\n        <Tooltip\r\n          html={this.props.tooltip}\r\n          position=\"bottom\"\r\n          trigger=\"mouseenter\"\r\n          interactive={true}\r\n          animateFill={false}\r\n          {...this.props.tooltipProps}\r\n        >\r\n          {button}\r\n        </Tooltip>\r\n      );\r\n    }\r\n    return button;\r\n  }\r\n\r\n  private handleClick(e: React.MouseEvent<HTMLButtonElement>) {\r\n    e.preventDefault();\r\n    if (!this.preventMultipleClick) {\r\n      !this.props.disabled && this.props.onClick && this.props.onClick(e);\r\n      if (this.props.disableAfterClickMs !== 0) {\r\n        this.preventMultipleClick = true;\r\n        setTimeout(() => {\r\n          this.preventMultipleClick = false;\r\n        }, this.props.disableAfterClickMs);\r\n      }\r\n    }\r\n  }\r\n\r\n  private getButtonClassName() {\r\n    return this.props.type && 'guestbell-btn-' + this.props.type;\r\n  }\r\n}\r\nexport default Button;\r\n"],"file":"Button.js"}