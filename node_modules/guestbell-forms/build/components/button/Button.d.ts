import * as React from 'react';
export declare type ButtonTypes = 'primary' | 'success' | 'error' | 'warning' | 'info' | 'gray' | 'white' | 'none';
export declare type ButtonComponentProps = {
    onClick: (e: React.MouseEvent<HTMLElement>) => void;
    className: string;
    buttonProps: React.ButtonHTMLAttributes<HTMLButtonElement>;
    children: React.ReactNode;
};
export declare type ButtonProps = {
    onClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;
    style?: React.StyleHTMLAttributes<HTMLButtonElement>;
    className?: string;
    disabled?: boolean;
    type?: ButtonTypes;
    circular?: boolean;
    noRipples?: boolean;
    small?: boolean;
    icon?: boolean;
    outlined?: boolean;
    disableAfterClickMs?: number;
    buttonProps?: React.ButtonHTMLAttributes<HTMLButtonElement>;
    hero?: boolean;
    noShadow?: boolean;
    blank?: boolean;
    dropdown?: boolean;
    Component?: (props: ButtonComponentProps) => JSX.Element;
    tooltip?: JSX.Element | string;
    tooltipProps?: any;
};
export interface ButtonState {
}
export declare class Button extends React.PureComponent<ButtonProps, ButtonState> {
    static defaultProps: ButtonProps;
    private preventMultipleClick;
    constructor(props: ButtonProps);
    render(): JSX.Element;
    private handleClick;
    private getButtonClassName;
}
export default Button;
