"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _button = _interopRequireDefault(require("../../button"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

var ArrowIcon = function ArrowIcon(props) {
  return React.createElement("svg", props, React.createElement("path", {
    d: "M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3A8.994 8.994 0 0 0 13 3.06V1h-2v2.06A8.994 8.994 0 0 0 3.06 11H1v2h2.06A8.994 8.994 0 0 0 11 20.94V23h2v-2.06A8.994 8.994 0 0 0 20.94 13H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"
  }));
};

ArrowIcon.defaultProps = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "24",
  height: "24",
  viewBox: "0 0 24 24"
};

var SubmitValidationSummary = function SubmitValidationSummary(props) {
  return React.createElement(React.Fragment, null, props.componentsWithErrors.map(function (component, index) {
    return React.createElement("div", {
      key: index,
      className: "submitValidationSummary__item"
    }, React.createElement("div", {
      className: "submitValidationSummary__item__header"
    }, component.validation.name ? component.validation.name : 'unknown'), React.createElement("div", {
      style: {
        flex: 'auto'
      }
    }), component.componentApi && component.componentApi.focus && component.componentApi.scrollTo && React.createElement(_button.default, {
      icon: true,
      className: "submitValidationSummary__item__locate-button",
      circular: true,
      type: "white",
      small: true,
      blank: true,
      onClick: function onClick() {
        component.componentApi.scrollTo();
        component.componentApi.focus();
      }
    }, React.createElement(ArrowIcon, null)));
  }));
};

var _default = SubmitValidationSummary;
exports.default = _default;
//# sourceMappingURL=SubmitValidationSummary.js.map