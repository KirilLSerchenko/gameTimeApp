{"version":3,"sources":["../../../src/lib/components/tags/Tags.tsx"],"names":["PlusIcon","TagsRaw","props","textErrors","setState","handleErrors","textIsFocused","suggestionsVisible","touched","fetchExistingTags","suggestions","e","key","state","value","preselectedSuggestion","undefined","length","preventDefault","stopPropagation","existingTag","existingTags","find","et","name","onTagsChanged","tags","concat","allowNew","addNewTag","onNewTagAdded","newTag","tag","isValid","target","textIsValid","errors","getErrors","setInvalid","setValid","newTags","filter","sv","id","fetchingExistingTags","textRef","React","createRef","current","inputRef","domNode","ReactDOM","findDOMNode","focus","nextProps","validators","customValidators","required","textProps","getSuggestions","title","getValidationClass","className","readOnly","containerRef","renderTags","maxTags","onKeyDown","onTextErrorsChanged","onTextChanged","onFocus","onBlur","showSuggestions","suggestionsLoadingComponent","suggestionsEmptyComponent","onSuggestionSelected","onClickOutside","renderDefaultValidation","label","renderLabel","valueNotAddedError","maxTagsSurpassedError","i","startsWith","timer","setTimeout","loadingDelayMs","then","fetchedExistingTags","clearTimeout","filteredTags","filterExistingTags","toLowerCase","some","t","slice","maxSuggestions","index","tagRemoveClick","map","item","renderTag","readonlyEmptyPlaceholder","BaseInput","defaultProps","disabled","newTagName","Promise","resolve","Date","getTime","text","Tags"],"mappings":"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","sourcesContent":["// Libs\r\nimport * as React from 'react';\r\nimport { InputGroup } from '../inputGroup/InputGroup';\r\nimport { Text, TextProps, TextRaw } from '../text/Text';\r\nimport * as PlusIcon from 'material-design-icons/content/svg/production/ic_add_circle_outline_24px.svg';\r\nimport { BaseInputProps, BaseInputState, BaseInput, ValidationError } from '../base/input/BaseInput';\r\nimport { Button } from '../button/Button';\r\nimport TagsSuggestions from './subComponents/TagsSuggestions';\r\nimport { OmitFormContext } from '../form/FormContext';\r\nimport { withFormContext } from '../form/withFormContext';\r\nimport { InnerRefProps } from './../../types/InnerRefProps';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\n// Misc\r\nexport type Tag = {\r\n  id: number | string;\r\n  name: string;\r\n};\r\n\r\nexport type TagsRawProps = {\r\n  className?: string;\r\n  disabled?: boolean;\r\n  tags: Tag[];\r\n  existingTags?: Tag[];\r\n  fetchExistingTags?: (text: string) => Promise<Tag[]>;\r\n  onTagsChanged: (newTags: Tag[]) => void;\r\n  onNewTagAdded?: (newTagName: string) => Promise<Tag>;\r\n  allowNew?: boolean;\r\n  textProps?: TextProps;\r\n  readOnly?: boolean;\r\n  readonlyEmptyPlaceholder?: string;\r\n  maxTags?: number;\r\n  valueNotAddedError?: (string | JSX.Element);\r\n  maxTagsSurpassedError?: (string | JSX.Element);\r\n  showSuggestions?: boolean;\r\n  suggestionsLoadingComponent?: string | JSX.Element;\r\n  suggestionsEmptyComponent?: string | JSX.Element;\r\n  loadingDelayMs?: number;\r\n  filterExistingTags?: (text: string, existingTags: Tag[]) => Tag[];\r\n  maxSuggestions?: number;\r\n} & BaseInputProps<HTMLInputElement>;\r\n\r\nexport type TagsProps = OmitFormContext<TagsRawProps> & InnerRefProps<TagsRaw>;\r\n\r\nexport interface TagsState extends BaseInputState {\r\n  textIsFocused: boolean;\r\n  textErrors: ValidationError[];\r\n  textIsValid: boolean;\r\n  suggestionsVisible: boolean;\r\n  fetchedExistingTags: Tag[];\r\n  fetchingExistingTags: boolean;\r\n  preselectedSuggestion?: number;\r\n}\r\n\r\nexport class TagsRaw extends BaseInput<TagsRawProps, TagsState, HTMLInputElement>  {\r\n  public static defaultProps: TagsRawProps = {\r\n    ...BaseInput.defaultProps,\r\n    disabled: false,\r\n    className: '',\r\n    tags: [],\r\n    existingTags: [],\r\n    maxTags: 1000,\r\n    onTagsChanged: () => undefined,\r\n    onNewTagAdded: (newTagName) => Promise.resolve(({ name: newTagName, id: new Date().getTime() })),\r\n    valueNotAddedError: <span>You forgot to add tag</span>,\r\n    maxTagsSurpassedError: <span>Maximum number of tags surpassed</span>,\r\n    showSuggestions: true,\r\n    suggestionsLoadingComponent: 'Loading...',\r\n    suggestionsEmptyComponent: 'No existing tags...',\r\n    loadingDelayMs: 500,\r\n    filterExistingTags: (text, tags) => tags.filter(tag => tag.name && tag.name.toLowerCase().startsWith(text)),\r\n    maxSuggestions: 5,\r\n  };\r\n\r\n  private textRef: React.RefObject<TextRaw>;\r\n\r\n  constructor(props: TagsRawProps) {\r\n    super(props);\r\n    this.state = { ...this.state, textErrors: [], textIsFocused: false, suggestionsVisible: false, fetchingExistingTags: false, textIsValid: false };\r\n    this.textRef = React.createRef();\r\n  }\r\n\r\n  public focus() {\r\n    if (this.textRef.current && this.textRef.current.inputRef) {\r\n      const domNode: HTMLElement = ReactDOM.findDOMNode((this.textRef.current.inputRef as React.RefObject<HTMLElement>).current) as HTMLElement;\r\n      domNode && domNode.focus();\r\n    }\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: TagsRawProps) {\r\n    if (nextProps.tags !== this.props.tags\r\n      ||\r\n      nextProps.validators !== this.props.validators\r\n      ||\r\n      nextProps.customValidators !== this.props.customValidators\r\n      ||\r\n      nextProps.required !== this.props.required\r\n    ) {\r\n      this.handleErrors(nextProps.tags);\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const textProps = this.props.textProps ? this.props.textProps : {};\r\n    const suggestions = this.getSuggestions();\r\n    return (\r\n      <InputGroup title={this.props.title}>\r\n        <div\r\n          className={'input__base tags-input ' + this.getValidationClass() + (this.props.className ? ' ' +\r\n            this.props.className : '') + ' ' + (this.props.readOnly ? 'tags-input--readOnly ' : '')}\r\n          ref={this.containerRef}\r\n        >\r\n          {this.renderTags()}\r\n          {(!this.props.maxTags || (this.props.maxTags > (this.props.tags && this.props.tags.length))) && !this.props.readOnly &&\r\n            <div className={'tags-input__tags__wrapper ' + (this.props.readOnly ? 'filled ' : '')}>\r\n              <Text\r\n                {...textProps}\r\n                innerRef={this.textRef}\r\n                required={this.props.tags.length > 0 ? false : this.props.required}\r\n                className={'tags-input__text-input ' + (textProps.className ? textProps.className : '')}\r\n                onKeyDown={this.onKeyDown(suggestions)}\r\n                onErrorsChanged={this.onTextErrorsChanged}\r\n                onChange={this.onTextChanged}\r\n                onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                value={this.state.value}\r\n                readOnly={this.props.readOnly}\r\n                showValidation={false}\r\n                ignoreContext={true}\r\n                validators={this.props.validators}\r\n                customValidators={this.props.customValidators}\r\n              />\r\n              {this.state.suggestionsVisible && this.props.showSuggestions && <TagsSuggestions\r\n                allowNew={this.props.allowNew}\r\n                preselectedSuggestion={this.state.preselectedSuggestion}\r\n                loading={this.state.fetchingExistingTags}\r\n                LoadingComponent={this.props.suggestionsLoadingComponent}\r\n                isVisible={this.state.suggestionsVisible}\r\n                EmptyComponent={this.props.suggestionsEmptyComponent}\r\n                tags={suggestions}\r\n                onSelected={this.onSuggestionSelected}\r\n                onClickOutside={this.onClickOutside}\r\n                value={this.state.value}\r\n                AddNewTagComponent={this.props.allowNew && this.state.value !== '' && this.state.textIsValid && (\r\n                  <Button\r\n                    dropdown={true}\r\n                    onClick={this.addNewTag}\r\n                  >\r\n                    Add new \"{this.state.value}\"\r\n                                    </Button>\r\n                )}\r\n              />}\r\n            </div >\r\n          }\r\n          {this.renderDefaultValidation()}\r\n          {this.props.label && <label\r\n            className={(((this.state.value !== '')\r\n              || (this.state.textIsFocused) || this.props.readOnly || (this.props.tags.length >= this.props.maxTags)) ? 'label--focused' : '')}\r\n          >{this.renderLabel()}\r\n          </label>}\r\n        </div>\r\n      </InputGroup >\r\n    );\r\n  }\r\n\r\n  private onTextErrorsChanged = (textErrors: ValidationError[]) => this.setState(() => ({ textErrors }), () => this.handleErrors());\r\n\r\n  private onFocus = () => {\r\n    this.setState({ textIsFocused: true, suggestionsVisible: true, touched: true }, () => this.handleErrors());\r\n    this.fetchExistingTags();\r\n  }\r\n\r\n  private onKeyDown = (suggestions: Tag[]) => async e => {\r\n    if (e.key === 'Enter' && (this.state.value !== '' || this.state.preselectedSuggestion !== undefined) && this.state.textErrors.length === 0) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      const existingTag = this.props.existingTags && this.props.existingTags.find(et => et.name === this.state.value);\r\n      if (this.state.preselectedSuggestion !== undefined) {\r\n        this.props.onTagsChanged(this.props.tags.concat(suggestions[this.state.preselectedSuggestion]));\r\n        this.setState({ value: '', preselectedSuggestion: undefined }, () => {\r\n          this.fetchExistingTags();\r\n          this.handleErrors();\r\n        });\r\n      } else if (existingTag) {\r\n        this.props.onTagsChanged(this.props.tags.concat(existingTag));\r\n        this.setState({ value: '' }, () => {\r\n          this.fetchExistingTags();\r\n          this.handleErrors();\r\n        });\r\n      } else if (this.props.allowNew) {\r\n        await this.addNewTag();\r\n        this.handleErrors();\r\n      }\r\n    }\r\n    if (suggestions.length > 0 && this.state.suggestionsVisible) {\r\n      if (e.key === 'ArrowUp') {\r\n        const preselectedSuggestion = this.state.preselectedSuggestion === undefined ?\r\n          suggestions.length - 1\r\n          :\r\n          this.state.preselectedSuggestion === 0 ?\r\n            suggestions.length - 1\r\n            :\r\n            this.state.preselectedSuggestion - 1;\r\n        this.setState({ preselectedSuggestion });\r\n      } else if (e.key === 'ArrowDown') {\r\n        const preselectedSuggestion = this.state.preselectedSuggestion === undefined ?\r\n          0\r\n          :\r\n          this.state.preselectedSuggestion === suggestions.length - 1 ?\r\n            0\r\n            :\r\n            this.state.preselectedSuggestion + 1;\r\n        this.setState({ preselectedSuggestion });\r\n      } else {\r\n        this.setState({ preselectedSuggestion: undefined });\r\n      }\r\n    }\r\n  }\r\n\r\n  private addNewTag = async () => {\r\n    const newTag = await this.props.onNewTagAdded(this.state.value);\r\n    if (newTag) {\r\n      this.props.onTagsChanged(this.props.tags ? this.props.tags.concat(newTag) : [newTag]);\r\n    }\r\n    this.setState({ value: '', textErrors: [] }, () => {\r\n      this.fetchExistingTags();\r\n      this.handleErrors();\r\n    });\r\n  }\r\n\r\n  private onSuggestionSelected = tag => {\r\n    this.props.onTagsChanged(this.props.tags.concat(tag));\r\n    this.setState({ value: '', preselectedSuggestion: undefined, textErrors: [] }, () => {\r\n      this.fetchExistingTags();\r\n      this.handleErrors();\r\n    });\r\n  }\r\n\r\n  private onBlur = () => {\r\n    this.setState({\r\n      textIsFocused: false,\r\n      preselectedSuggestion: undefined\r\n    }, () => this.handleErrors());\r\n  }\r\n\r\n  private onClickOutside = () => this.setState({ suggestionsVisible: false, preselectedSuggestion: undefined });\r\n\r\n  private onTextChanged = (e: React.ChangeEvent<HTMLInputElement>, isValid: boolean) => {\r\n    const value = e.target.value;\r\n    this.setState(() => ({\r\n      value,\r\n      isValid: isValid,\r\n      textIsValid: isValid,\r\n      suggestionsVisible: true\r\n    }), () => this.handleErrors());\r\n    this.fetchExistingTags(e.target.value);\r\n  }\r\n\r\n  private handleErrors = (tags: Tag[] = this.props.tags) => {\r\n    let errors = this.getErrors(tags);\r\n    if (errors.length > 0) {\r\n      this.setInvalid(errors);\r\n    } else {\r\n      this.setValid();\r\n    }\r\n  }\r\n\r\n  private getErrors(tags: Tag[]) {\r\n    let errors = [];\r\n    if (tags.length < this.props.maxTags) {\r\n      errors = errors.concat(this.state.textErrors);\r\n    }\r\n    if (this.state.value !== '' && tags.length === 0 && this.props.required) {\r\n      errors = errors.concat('Required');\r\n    }\r\n    if (this.state.value && this.props.allowNew && !this.state.textIsFocused) {\r\n      errors = errors.concat(this.props.valueNotAddedError);\r\n    }\r\n    if (this.props.maxTags < (this.props.tags && this.props.tags.length)) {\r\n      errors = errors.concat(this.props.maxTagsSurpassedError);\r\n    }\r\n    return errors.filter(i => i);\r\n  }\r\n\r\n  private fetchExistingTags(startsWith: string = '') {\r\n    if (this.props.fetchExistingTags) {\r\n      const timer = setTimeout(() => this.setState({ fetchingExistingTags: true }), this.props.loadingDelayMs);\r\n      this.props.fetchExistingTags(startsWith).\r\n        then(fetchedExistingTags => {\r\n          clearTimeout(timer);\r\n          this.setState({\r\n            fetchedExistingTags,\r\n            fetchingExistingTags: false\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  private getSuggestions() {\r\n    const existingTags: Tag[] = [].concat((this.props.existingTags ? this.props.existingTags : [])).\r\n      concat(this.state.fetchedExistingTags ? this.state.fetchedExistingTags : []);\r\n    const filteredTags = this.props.filterExistingTags(this.state.value ? this.state.value.toLowerCase() : '', existingTags);\r\n    let suggestions = filteredTags.\r\n      filter(tag => !this.props.tags.some(t => t.id === tag.id)).\r\n      slice(0, this.props.maxSuggestions);\r\n    return suggestions;\r\n  }\r\n\r\n  private renderTag(tag: Tag, index: number) {\r\n    return (\r\n      <div\r\n        className=\"tags-input__tag\"\r\n        key={index}\r\n      >\r\n        {tag.name}\r\n        {!this.props.readOnly && <Button\r\n          circular={true}\r\n          blank={true}\r\n          onClick={this.tagRemoveClick(tag)}\r\n          className=\"ml-1 transform-rotate--45 line-height--0 p-0\"\r\n        >\r\n          <PlusIcon />\r\n        </Button>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private tagRemoveClick = (tag: Tag) => () => {\r\n    const newTags = this.props.tags.filter(sv => sv.id !== tag.id);\r\n    this.props.onTagsChanged && this.props.onTagsChanged(newTags);\r\n    this.handleErrors(newTags);\r\n    this.fetchExistingTags();\r\n  }\r\n\r\n  private renderTags() {\r\n    return this.props.tags && this.props.tags.length > 0 ? (\r\n      <div className=\"tags-input__tag__wrapper\">{this.props.tags.map((item, index) => (\r\n        this.renderTag(item, index)\r\n      ))}\r\n      </div>\r\n    )\r\n      :\r\n      this.props.readOnly && (\r\n        <div className=\"tags-input__tag__wrapper\">\r\n          <div className=\"tags-input__tag\">\r\n            {this.props.readonlyEmptyPlaceholder}\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport const Tags = withFormContext<TagsRawProps, TagsProps>(TagsRaw);\r\n\r\nexport default Tags;\r\n"],"file":"Tags.js"}