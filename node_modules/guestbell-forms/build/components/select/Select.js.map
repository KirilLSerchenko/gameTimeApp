{"version":3,"sources":["../../../src/lib/components/select/Select.tsx"],"names":["PlusIcon","SelectRaw","props","item","newValues","selectedValues","filter","sv","value","handleValid","onSelectedValuesChange","val","defaultEmpty","values","length","state","Object","assign","handleChangeCustom","bind","multiple","finalValues","findIndex","t","title","getValidationClass","className","readOnly","containerRef","renderSelectedValues","inputRef","getDisabled","required","handleBlur","handleFocus","display","map","index","label","renderReadonly","renderDefaultValidation","renderLabel","event","target","isNaN","Number","valNumber","concat","setState","handleChange","setValid","setInvalid","toString","forceSelected","removeItemClick","readonlyEmptyPlaceholder","BaseInput","defaultProps","Select"],"mappings":"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","sourcesContent":["ï»¿// Libs\r\nimport * as React from 'react';\r\n\r\n// Misc\r\nimport InputGroup from '../inputGroup/InputGroup';\r\nimport * as PlusIcon from 'material-design-icons/content/svg/production/ic_add_circle_outline_24px.svg';\r\nimport { BaseInputProps, BaseInputState, BaseInput } from '../base/input/BaseInput';\r\nimport { Button } from '../button/Button';\r\nimport { OmitFormContext } from '../form/FormContext';\r\nimport { withFormContext } from '../form/withFormContext';\r\nimport InnerRefProps from '../../types/InnerRefProps';\r\n\r\nexport interface SelectValue {\r\n  value: number | string;\r\n  label?: string;\r\n  forceSelected?: boolean;\r\n}\r\n\r\nexport interface SelectRawProps extends BaseInputProps<HTMLSelectElement> {\r\n  values?: SelectValue[];\r\n  defaultEmpty?: boolean;\r\n  multiple?: boolean;\r\n  selectedValues?: SelectValue[];\r\n  onSelectedValuesChange?: (newValues: SelectValue[]) => void;\r\n  inputRef?: (input: HTMLSelectElement) => void;\r\n  readOnly?: boolean;\r\n  readonlyEmptyPlaceholder?: string;\r\n}\r\n\r\nexport type SelectProps = OmitFormContext<SelectRawProps> & InnerRefProps<SelectRaw>;\r\n\r\nexport interface SelectState extends BaseInputState {\r\n}\r\n\r\nclass SelectRaw extends BaseInput<SelectRawProps, SelectState, HTMLSelectElement> {\r\n  public static defaultProps = Object.assign({}, BaseInput.defaultProps, {\r\n    defaultEmpty: true,\r\n    multiple: false,\r\n    readOnly: false,\r\n    readonlyEmptyPlaceholder: 'N/A'\r\n  });\r\n\r\n  constructor(props: SelectRawProps) {\r\n    super(props);\r\n    const val = !props.value ?\r\n      props.defaultEmpty ?\r\n        '' :\r\n        props.values && props.values.length > 0 ?\r\n          props.values[0]\r\n          :\r\n          ''\r\n      :\r\n      props.value;\r\n    this.state = Object.assign(this.state, { value: val });\r\n    this.handleChangeCustom = this.handleChangeCustom.bind(this);\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.props.multiple && this.handleValid(this.props.selectedValues);\r\n  }\r\n\r\n  public render() {\r\n    const finalValues = this.props.multiple ? this.props.values.filter(item => this.props.selectedValues.\r\n      findIndex((t) => t.value === item.value) < 0) : this.props.values;\r\n    return (\r\n      <InputGroup title={this.props.title}>\r\n        <div\r\n          className={'input__base select-input ' + this.getValidationClass() + ' ' + (this.props.className ? this.props.className : '') +\r\n            ' ' + (this.props.readOnly ? 'readonly' : '') + ' ' + (this.props.multiple ? 'multiple' : '')}\r\n          ref={this.containerRef}\r\n        >\r\n          {this.renderSelectedValues()}\r\n          {finalValues.length > 0 && ((this.props.multiple && !this.props.readOnly) || !this.props.multiple) &&\r\n            <div className=\"select-input__select__wrapper\">\r\n              {((!this.props.multiple && !this.props.readOnly) || this.props.multiple) ?\r\n                <select\r\n                  ref={this.inputRef}\r\n                  disabled={this.getDisabled()}\r\n                  required={this.props.required}\r\n                  onChange={this.handleChangeCustom}\r\n                  value={this.state.value}\r\n                  className={'select-input__select ' + (this.state.value !== '' || (this.props.selectedValues &&\r\n                    this.props.selectedValues.length > 0) ? 'filled' : '')}\r\n                  onBlur={this.handleBlur}\r\n                  onFocus={this.handleFocus}\r\n                >\r\n                  {this.props.defaultEmpty && (\r\n                    <option key={-1} disabled={true} value=\"\" style={{ display: 'none' }} />\r\n                  )}\r\n                  {finalValues.map((value, index) => (\r\n                    <option key={index} value={value.value}>{value.label ? value.label : value.value}</option>\r\n                  ))}\r\n                </select>\r\n                :\r\n                <span\r\n                  className={'select-input__select ' + (this.state.value !== '' || (this.props.selectedValues &&\r\n                    this.props.selectedValues.length > 0) ? 'filled' : '')}\r\n                >\r\n                  {this.renderReadonly()}\r\n                </span>\r\n              }\r\n              <span className=\"highlight\" />\r\n              <span className=\"bar\" />\r\n              {this.renderDefaultValidation()}\r\n              {this.props.label && finalValues.length > 0 && <label>{this.renderLabel()}</label>}\r\n            </div>\r\n          }\r\n        </div>\r\n      </InputGroup>\r\n    );\r\n  }\r\n\r\n  private handleChangeCustom(event: React.ChangeEvent<HTMLSelectElement>) {\r\n    if (this.props.multiple) {\r\n      let value = event.target.value;\r\n      let val = this.props.values.filter(item => item.value === value)[0];\r\n      if (!val) {\r\n        if (!isNaN(Number(value))) {\r\n          let valNumber = Number(value);\r\n          val = this.props.values.filter(item => item.value === valNumber)[0];\r\n        }\r\n      }\r\n      let newValues = this.props.selectedValues.concat(val);\r\n      if (val) {\r\n        this.props.onSelectedValuesChange && this.props.onSelectedValuesChange(newValues);\r\n        this.handleValid(newValues);\r\n        this.setState({ value: '' });\r\n      }\r\n    } else {\r\n      this.handleChange(event);\r\n    }\r\n  }\r\n\r\n  private handleValid(newValues: SelectValue[]) {\r\n    if (this.props.required) {\r\n      if (newValues.length > 0) {\r\n        this.setValid();\r\n      } else {\r\n        this.setInvalid(['Required']);\r\n      }\r\n    }\r\n  }\r\n\r\n  private renderReadonly() {\r\n    const value = this.props.values.filter(item => item.value.toString() === this.state.value)[0];\r\n    return value ? value.label ? value.label : value.value : '';\r\n  }\r\n\r\n  private renderSelectedValues() {\r\n    return this.props.multiple ?\r\n      this.props.selectedValues.length > 0 ? (\r\n        <div className=\"select-input__selectedValue__wrapper\">{this.props.selectedValues.map((item, index) => (\r\n          <div\r\n            className=\"select-input__selectedValue\"\r\n            key={index}\r\n          >\r\n            {item.label ? item.label : item.value}\r\n            {!this.props.readOnly && <Button\r\n              disabled={item.forceSelected}\r\n              circular={true}\r\n              blank={true}\r\n              onClick={this.removeItemClick(item)}\r\n              className=\"ml-1 transform-rotate--45 line-height--0 p-0\"\r\n            >\r\n              <PlusIcon />\r\n            </Button>}\r\n          </div>\r\n        ))\r\n        }\r\n        </div>\r\n      )\r\n        :\r\n        this.props.readOnly && (\r\n          <div className=\"select-input__selectedValue__wrapper\">\r\n            <div className=\"select-input__selectedValue\">\r\n              {this.props.readonlyEmptyPlaceholder}\r\n            </div>\r\n          </div>\r\n        )\r\n      :\r\n      null;\r\n  }\r\n\r\n  private removeItemClick = (item: SelectValue) => () => {\r\n    const newValues = this.props.selectedValues.filter(sv => sv.value !== item.value);\r\n    this.handleValid(newValues);\r\n    this.props.onSelectedValuesChange && this.props.onSelectedValuesChange(newValues);\r\n  }\r\n}\r\n\r\nexport const Select = withFormContext<SelectRawProps, SelectProps>(SelectRaw);\r\n\r\nexport default Select;"],"file":"Select.js"}